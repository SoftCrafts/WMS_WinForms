//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private binDataTable tablebin;
        
        private locationDataTable tablelocation;
        
        private currencyDataTable tablecurrency;
        
        private customerDataTable tablecustomer;
        
        private itemDataTable tableitem;
        
        private item_entryDataTable tableitem_entry;
        
        private manufacturerDataTable tablemanufacturer;
        
        private modelDataTable tablemodel;
        
        private userDataTable tableuser;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["bin"] != null)) {
                    base.Tables.Add(new binDataTable(ds.Tables["bin"]));
                }
                if ((ds.Tables["location"] != null)) {
                    base.Tables.Add(new locationDataTable(ds.Tables["location"]));
                }
                if ((ds.Tables["currency"] != null)) {
                    base.Tables.Add(new currencyDataTable(ds.Tables["currency"]));
                }
                if ((ds.Tables["customer"] != null)) {
                    base.Tables.Add(new customerDataTable(ds.Tables["customer"]));
                }
                if ((ds.Tables["item"] != null)) {
                    base.Tables.Add(new itemDataTable(ds.Tables["item"]));
                }
                if ((ds.Tables["item_entry"] != null)) {
                    base.Tables.Add(new item_entryDataTable(ds.Tables["item_entry"]));
                }
                if ((ds.Tables["manufacturer"] != null)) {
                    base.Tables.Add(new manufacturerDataTable(ds.Tables["manufacturer"]));
                }
                if ((ds.Tables["model"] != null)) {
                    base.Tables.Add(new modelDataTable(ds.Tables["model"]));
                }
                if ((ds.Tables["user"] != null)) {
                    base.Tables.Add(new userDataTable(ds.Tables["user"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public binDataTable bin {
            get {
                return this.tablebin;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public locationDataTable location {
            get {
                return this.tablelocation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public currencyDataTable currency {
            get {
                return this.tablecurrency;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public customerDataTable customer {
            get {
                return this.tablecustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public itemDataTable item {
            get {
                return this.tableitem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public item_entryDataTable item_entry {
            get {
                return this.tableitem_entry;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public manufacturerDataTable manufacturer {
            get {
                return this.tablemanufacturer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public modelDataTable model {
            get {
                return this.tablemodel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public userDataTable user {
            get {
                return this.tableuser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["bin"] != null)) {
                    base.Tables.Add(new binDataTable(ds.Tables["bin"]));
                }
                if ((ds.Tables["location"] != null)) {
                    base.Tables.Add(new locationDataTable(ds.Tables["location"]));
                }
                if ((ds.Tables["currency"] != null)) {
                    base.Tables.Add(new currencyDataTable(ds.Tables["currency"]));
                }
                if ((ds.Tables["customer"] != null)) {
                    base.Tables.Add(new customerDataTable(ds.Tables["customer"]));
                }
                if ((ds.Tables["item"] != null)) {
                    base.Tables.Add(new itemDataTable(ds.Tables["item"]));
                }
                if ((ds.Tables["item_entry"] != null)) {
                    base.Tables.Add(new item_entryDataTable(ds.Tables["item_entry"]));
                }
                if ((ds.Tables["manufacturer"] != null)) {
                    base.Tables.Add(new manufacturerDataTable(ds.Tables["manufacturer"]));
                }
                if ((ds.Tables["model"] != null)) {
                    base.Tables.Add(new modelDataTable(ds.Tables["model"]));
                }
                if ((ds.Tables["user"] != null)) {
                    base.Tables.Add(new userDataTable(ds.Tables["user"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablebin = ((binDataTable)(base.Tables["bin"]));
            if ((initTable == true)) {
                if ((this.tablebin != null)) {
                    this.tablebin.InitVars();
                }
            }
            this.tablelocation = ((locationDataTable)(base.Tables["location"]));
            if ((initTable == true)) {
                if ((this.tablelocation != null)) {
                    this.tablelocation.InitVars();
                }
            }
            this.tablecurrency = ((currencyDataTable)(base.Tables["currency"]));
            if ((initTable == true)) {
                if ((this.tablecurrency != null)) {
                    this.tablecurrency.InitVars();
                }
            }
            this.tablecustomer = ((customerDataTable)(base.Tables["customer"]));
            if ((initTable == true)) {
                if ((this.tablecustomer != null)) {
                    this.tablecustomer.InitVars();
                }
            }
            this.tableitem = ((itemDataTable)(base.Tables["item"]));
            if ((initTable == true)) {
                if ((this.tableitem != null)) {
                    this.tableitem.InitVars();
                }
            }
            this.tableitem_entry = ((item_entryDataTable)(base.Tables["item_entry"]));
            if ((initTable == true)) {
                if ((this.tableitem_entry != null)) {
                    this.tableitem_entry.InitVars();
                }
            }
            this.tablemanufacturer = ((manufacturerDataTable)(base.Tables["manufacturer"]));
            if ((initTable == true)) {
                if ((this.tablemanufacturer != null)) {
                    this.tablemanufacturer.InitVars();
                }
            }
            this.tablemodel = ((modelDataTable)(base.Tables["model"]));
            if ((initTable == true)) {
                if ((this.tablemodel != null)) {
                    this.tablemodel.InitVars();
                }
            }
            this.tableuser = ((userDataTable)(base.Tables["user"]));
            if ((initTable == true)) {
                if ((this.tableuser != null)) {
                    this.tableuser.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablebin = new binDataTable();
            base.Tables.Add(this.tablebin);
            this.tablelocation = new locationDataTable();
            base.Tables.Add(this.tablelocation);
            this.tablecurrency = new currencyDataTable();
            base.Tables.Add(this.tablecurrency);
            this.tablecustomer = new customerDataTable();
            base.Tables.Add(this.tablecustomer);
            this.tableitem = new itemDataTable();
            base.Tables.Add(this.tableitem);
            this.tableitem_entry = new item_entryDataTable();
            base.Tables.Add(this.tableitem_entry);
            this.tablemanufacturer = new manufacturerDataTable();
            base.Tables.Add(this.tablemanufacturer);
            this.tablemodel = new modelDataTable();
            base.Tables.Add(this.tablemodel);
            this.tableuser = new userDataTable();
            base.Tables.Add(this.tableuser);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebin() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelocation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecurrency() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeitem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeitem_entry() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemanufacturer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemodel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeuser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void binRowChangeEventHandler(object sender, binRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void locationRowChangeEventHandler(object sender, locationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void currencyRowChangeEventHandler(object sender, currencyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void customerRowChangeEventHandler(object sender, customerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void itemRowChangeEventHandler(object sender, itemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void item_entryRowChangeEventHandler(object sender, item_entryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void manufacturerRowChangeEventHandler(object sender, manufacturerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void modelRowChangeEventHandler(object sender, modelRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void userRowChangeEventHandler(object sender, userRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class binDataTable : global::System.Data.TypedTableBase<binRow> {
            
            private global::System.Data.DataColumn columnBin_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnWidth;
            
            private global::System.Data.DataColumn columnHeight;
            
            private global::System.Data.DataColumn columnMax_Weight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binDataTable() {
                this.TableName = "bin";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal binDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected binDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bin_IDColumn {
                get {
                    return this.columnBin_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WidthColumn {
                get {
                    return this.columnWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightColumn {
                get {
                    return this.columnHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_WeightColumn {
                get {
                    return this.columnMax_Weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRow this[int index] {
                get {
                    return ((binRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event binRowChangeEventHandler binRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event binRowChangeEventHandler binRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event binRowChangeEventHandler binRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event binRowChangeEventHandler binRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbinRow(binRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRow AddbinRow(long Location_ID, string Description, float Length, float Width, float Height, float Max_Weight) {
                binRow rowbinRow = ((binRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Location_ID,
                        Description,
                        Length,
                        Width,
                        Height,
                        Max_Weight};
                rowbinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbinRow);
                return rowbinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRow FindByBin_ID(long Bin_ID) {
                return ((binRow)(this.Rows.Find(new object[] {
                            Bin_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                binDataTable cln = ((binDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new binDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBin_ID = base.Columns["Bin_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnDescription = base.Columns["Description"];
                this.columnLength = base.Columns["Length"];
                this.columnWidth = base.Columns["Width"];
                this.columnHeight = base.Columns["Height"];
                this.columnMax_Weight = base.Columns["Max_Weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBin_ID = new global::System.Data.DataColumn("Bin_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBin_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnWidth = new global::System.Data.DataColumn("Width", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidth);
                this.columnHeight = new global::System.Data.DataColumn("Height", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeight);
                this.columnMax_Weight = new global::System.Data.DataColumn("Max_Weight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Weight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBin_ID}, true));
                this.columnBin_ID.AutoIncrement = true;
                this.columnBin_ID.AutoIncrementSeed = -1;
                this.columnBin_ID.AutoIncrementStep = -1;
                this.columnBin_ID.AllowDBNull = false;
                this.columnBin_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRow NewbinRow() {
                return ((binRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new binRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(binRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.binRowChanged != null)) {
                    this.binRowChanged(this, new binRowChangeEvent(((binRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.binRowChanging != null)) {
                    this.binRowChanging(this, new binRowChangeEvent(((binRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.binRowDeleted != null)) {
                    this.binRowDeleted(this, new binRowChangeEvent(((binRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.binRowDeleting != null)) {
                    this.binRowDeleting(this, new binRowChangeEvent(((binRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebinRow(binRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "binDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class locationDataTable : global::System.Data.TypedTableBase<locationRow> {
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnUser_ID;
            
            private global::System.Data.DataColumn columnRequire_Bin;
            
            private global::System.Data.DataColumn columnInserted_by;
            
            private global::System.Data.DataColumn columnInserted_on;
            
            private global::System.Data.DataColumn columnModified_by;
            
            private global::System.Data.DataColumn columnModified_on;
            
            private global::System.Data.DataColumn columnTest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationDataTable() {
                this.TableName = "location";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal locationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected locationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn User_IDColumn {
                get {
                    return this.columnUser_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Require_BinColumn {
                get {
                    return this.columnRequire_Bin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_byColumn {
                get {
                    return this.columnInserted_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_onColumn {
                get {
                    return this.columnInserted_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_byColumn {
                get {
                    return this.columnModified_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_onColumn {
                get {
                    return this.columnModified_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestColumn {
                get {
                    return this.columnTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRow this[int index] {
                get {
                    return ((locationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event locationRowChangeEventHandler locationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event locationRowChangeEventHandler locationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event locationRowChangeEventHandler locationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event locationRowChangeEventHandler locationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddlocationRow(locationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRow AddlocationRow(string Name, string Address, long User_ID, int Require_Bin, long Inserted_by, System.DateTime Inserted_on, long Modified_by, System.DateTime Modified_on, string Test) {
                locationRow rowlocationRow = ((locationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Address,
                        User_ID,
                        Require_Bin,
                        Inserted_by,
                        Inserted_on,
                        Modified_by,
                        Modified_on,
                        Test};
                rowlocationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlocationRow);
                return rowlocationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRow FindByLocation_ID(long Location_ID) {
                return ((locationRow)(this.Rows.Find(new object[] {
                            Location_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                locationDataTable cln = ((locationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new locationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnUser_ID = base.Columns["User_ID"];
                this.columnRequire_Bin = base.Columns["Require_Bin"];
                this.columnInserted_by = base.Columns["Inserted_by"];
                this.columnInserted_on = base.Columns["Inserted_on"];
                this.columnModified_by = base.Columns["Modified_by"];
                this.columnModified_on = base.Columns["Modified_on"];
                this.columnTest = base.Columns["Test"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnUser_ID = new global::System.Data.DataColumn("User_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_ID);
                this.columnRequire_Bin = new global::System.Data.DataColumn("Require_Bin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequire_Bin);
                this.columnInserted_by = new global::System.Data.DataColumn("Inserted_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_by);
                this.columnInserted_on = new global::System.Data.DataColumn("Inserted_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_on);
                this.columnModified_by = new global::System.Data.DataColumn("Modified_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_by);
                this.columnModified_on = new global::System.Data.DataColumn("Modified_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_on);
                this.columnTest = new global::System.Data.DataColumn("Test", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLocation_ID}, true));
                this.columnLocation_ID.AutoIncrement = true;
                this.columnLocation_ID.AutoIncrementSeed = -1;
                this.columnLocation_ID.AutoIncrementStep = -1;
                this.columnLocation_ID.AllowDBNull = false;
                this.columnLocation_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRow NewlocationRow() {
                return ((locationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new locationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(locationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.locationRowChanged != null)) {
                    this.locationRowChanged(this, new locationRowChangeEvent(((locationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.locationRowChanging != null)) {
                    this.locationRowChanging(this, new locationRowChangeEvent(((locationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.locationRowDeleted != null)) {
                    this.locationRowDeleted(this, new locationRowChangeEvent(((locationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.locationRowDeleting != null)) {
                    this.locationRowDeleting(this, new locationRowChangeEvent(((locationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovelocationRow(locationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "locationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class currencyDataTable : global::System.Data.TypedTableBase<currencyRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyDataTable() {
                this.TableName = "currency";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal currencyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected currencyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRow this[int index] {
                get {
                    return ((currencyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event currencyRowChangeEventHandler currencyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event currencyRowChangeEventHandler currencyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event currencyRowChangeEventHandler currencyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event currencyRowChangeEventHandler currencyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcurrencyRow(currencyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRow AddcurrencyRow(string Code, string Description) {
                currencyRow rowcurrencyRow = ((currencyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Description};
                rowcurrencyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcurrencyRow);
                return rowcurrencyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRow FindByCode(string Code) {
                return ((currencyRow)(this.Rows.Find(new object[] {
                            Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                currencyDataTable cln = ((currencyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new currencyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode}, true));
                this.columnCode.AllowDBNull = false;
                this.columnCode.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRow NewcurrencyRow() {
                return ((currencyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new currencyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(currencyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.currencyRowChanged != null)) {
                    this.currencyRowChanged(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.currencyRowChanging != null)) {
                    this.currencyRowChanging(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.currencyRowDeleted != null)) {
                    this.currencyRowDeleted(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.currencyRowDeleting != null)) {
                    this.currencyRowDeleting(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecurrencyRow(currencyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "currencyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class customerDataTable : global::System.Data.TypedTableBase<customerRow> {
            
            private global::System.Data.DataColumn columnCustomer_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnCountry_Code;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnPost_Code;
            
            private global::System.Data.DataColumn columnPhone_No;
            
            private global::System.Data.DataColumn columnFax_No;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnDiscount_Percent;
            
            private global::System.Data.DataColumn columnIdentification_No;
            
            private global::System.Data.DataColumn columnVAT_Registered;
            
            private global::System.Data.DataColumn columnVAT_Registration_No;
            
            private global::System.Data.DataColumn columnResponsible_Person;
            
            private global::System.Data.DataColumn columnPayment_Method;
            
            private global::System.Data.DataColumn columnPayment_Terms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerDataTable() {
                this.TableName = "customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected customerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Customer_IDColumn {
                get {
                    return this.columnCustomer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_CodeColumn {
                get {
                    return this.columnCountry_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Post_CodeColumn {
                get {
                    return this.columnPost_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Phone_NoColumn {
                get {
                    return this.columnPhone_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Fax_NoColumn {
                get {
                    return this.columnFax_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Discount_PercentColumn {
                get {
                    return this.columnDiscount_Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Identification_NoColumn {
                get {
                    return this.columnIdentification_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_RegisteredColumn {
                get {
                    return this.columnVAT_Registered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_Registration_NoColumn {
                get {
                    return this.columnVAT_Registration_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Responsible_PersonColumn {
                get {
                    return this.columnResponsible_Person;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Payment_MethodColumn {
                get {
                    return this.columnPayment_Method;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Payment_TermsColumn {
                get {
                    return this.columnPayment_Terms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow this[int index] {
                get {
                    return ((customerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcustomerRow(customerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow AddcustomerRow(string Name, string Type, string Country_Code, string City, string Post_Code, string Phone_No, string Fax_No, string Email, float Discount_Percent, string Identification_No, int VAT_Registered, string VAT_Registration_No, string Responsible_Person, string Payment_Method, int Payment_Terms) {
                customerRow rowcustomerRow = ((customerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Type,
                        Country_Code,
                        City,
                        Post_Code,
                        Phone_No,
                        Fax_No,
                        Email,
                        Discount_Percent,
                        Identification_No,
                        VAT_Registered,
                        VAT_Registration_No,
                        Responsible_Person,
                        Payment_Method,
                        Payment_Terms};
                rowcustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcustomerRow);
                return rowcustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow FindByCustomer_ID(long Customer_ID) {
                return ((customerRow)(this.Rows.Find(new object[] {
                            Customer_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                customerDataTable cln = ((customerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new customerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCustomer_ID = base.Columns["Customer_ID"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnCountry_Code = base.Columns["Country_Code"];
                this.columnCity = base.Columns["City"];
                this.columnPost_Code = base.Columns["Post_Code"];
                this.columnPhone_No = base.Columns["Phone_No"];
                this.columnFax_No = base.Columns["Fax_No"];
                this.columnEmail = base.Columns["Email"];
                this.columnDiscount_Percent = base.Columns["Discount_Percent"];
                this.columnIdentification_No = base.Columns["Identification_No"];
                this.columnVAT_Registered = base.Columns["VAT_Registered"];
                this.columnVAT_Registration_No = base.Columns["VAT_Registration_No"];
                this.columnResponsible_Person = base.Columns["Responsible_Person"];
                this.columnPayment_Method = base.Columns["Payment_Method"];
                this.columnPayment_Terms = base.Columns["Payment_Terms"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCustomer_ID = new global::System.Data.DataColumn("Customer_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnCountry_Code = new global::System.Data.DataColumn("Country_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Code);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnPost_Code = new global::System.Data.DataColumn("Post_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Code);
                this.columnPhone_No = new global::System.Data.DataColumn("Phone_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone_No);
                this.columnFax_No = new global::System.Data.DataColumn("Fax_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax_No);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnDiscount_Percent = new global::System.Data.DataColumn("Discount_Percent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount_Percent);
                this.columnIdentification_No = new global::System.Data.DataColumn("Identification_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentification_No);
                this.columnVAT_Registered = new global::System.Data.DataColumn("VAT_Registered", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Registered);
                this.columnVAT_Registration_No = new global::System.Data.DataColumn("VAT_Registration_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Registration_No);
                this.columnResponsible_Person = new global::System.Data.DataColumn("Responsible_Person", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsible_Person);
                this.columnPayment_Method = new global::System.Data.DataColumn("Payment_Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Method);
                this.columnPayment_Terms = new global::System.Data.DataColumn("Payment_Terms", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Terms);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCustomer_ID}, true));
                this.columnCustomer_ID.AutoIncrement = true;
                this.columnCustomer_ID.AutoIncrementSeed = -1;
                this.columnCustomer_ID.AutoIncrementStep = -1;
                this.columnCustomer_ID.AllowDBNull = false;
                this.columnCustomer_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow NewcustomerRow() {
                return ((customerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new customerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(customerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.customerRowChanged != null)) {
                    this.customerRowChanged(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.customerRowChanging != null)) {
                    this.customerRowChanging(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.customerRowDeleted != null)) {
                    this.customerRowDeleted(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.customerRowDeleting != null)) {
                    this.customerRowDeleting(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecustomerRow(customerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "customerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class itemDataTable : global::System.Data.TypedTableBase<itemRow> {
            
            private global::System.Data.DataColumn columnItem_ID;
            
            private global::System.Data.DataColumn columnItem_Type;
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnit_of_Measure;
            
            private global::System.Data.DataColumn columnManufacturer_ID;
            
            private global::System.Data.DataColumn columnModel_ID;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnPurchase_Price_Currency_Code;
            
            private global::System.Data.DataColumn columnSales_Price;
            
            private global::System.Data.DataColumn columnSales_Price_Currency_Code;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnBin_ID;
            
            private global::System.Data.DataColumn columnInserted_by;
            
            private global::System.Data.DataColumn columnInserted_on;
            
            private global::System.Data.DataColumn columnModified_by;
            
            private global::System.Data.DataColumn columnModified_on;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnWidth;
            
            private global::System.Data.DataColumn columnHeight;
            
            private global::System.Data.DataColumn columnWeight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemDataTable() {
                this.TableName = "item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal itemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected itemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Item_IDColumn {
                get {
                    return this.columnItem_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Item_TypeColumn {
                get {
                    return this.columnItem_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unit_of_MeasureColumn {
                get {
                    return this.columnUnit_of_Measure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Manufacturer_IDColumn {
                get {
                    return this.columnManufacturer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_IDColumn {
                get {
                    return this.columnModel_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Purchase_Price_Currency_CodeColumn {
                get {
                    return this.columnPurchase_Price_Currency_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sales_PriceColumn {
                get {
                    return this.columnSales_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sales_Price_Currency_CodeColumn {
                get {
                    return this.columnSales_Price_Currency_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bin_IDColumn {
                get {
                    return this.columnBin_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_byColumn {
                get {
                    return this.columnInserted_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_onColumn {
                get {
                    return this.columnInserted_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_byColumn {
                get {
                    return this.columnModified_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_onColumn {
                get {
                    return this.columnModified_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WidthColumn {
                get {
                    return this.columnWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightColumn {
                get {
                    return this.columnHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRow this[int index] {
                get {
                    return ((itemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event itemRowChangeEventHandler itemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event itemRowChangeEventHandler itemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event itemRowChangeEventHandler itemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event itemRowChangeEventHandler itemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdditemRow(itemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRow AdditemRow(
                        long Item_Type, 
                        string No, 
                        string Description, 
                        string Unit_of_Measure, 
                        long Manufacturer_ID, 
                        long Model_ID, 
                        float Purchase_Price, 
                        string Purchase_Price_Currency_Code, 
                        float Sales_Price, 
                        string Sales_Price_Currency_Code, 
                        long Location_ID, 
                        long Bin_ID, 
                        long Inserted_by, 
                        System.DateTime Inserted_on, 
                        long Modified_by, 
                        System.DateTime Modified_on, 
                        float Length, 
                        float Width, 
                        float Height, 
                        float Weight) {
                itemRow rowitemRow = ((itemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Item_Type,
                        No,
                        Description,
                        Unit_of_Measure,
                        Manufacturer_ID,
                        Model_ID,
                        Purchase_Price,
                        Purchase_Price_Currency_Code,
                        Sales_Price,
                        Sales_Price_Currency_Code,
                        Location_ID,
                        Bin_ID,
                        Inserted_by,
                        Inserted_on,
                        Modified_by,
                        Modified_on,
                        Length,
                        Width,
                        Height,
                        Weight};
                rowitemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowitemRow);
                return rowitemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRow FindByItem_ID(long Item_ID) {
                return ((itemRow)(this.Rows.Find(new object[] {
                            Item_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                itemDataTable cln = ((itemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new itemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItem_ID = base.Columns["Item_ID"];
                this.columnItem_Type = base.Columns["Item_Type"];
                this.columnNo = base.Columns["No"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnit_of_Measure = base.Columns["Unit_of_Measure"];
                this.columnManufacturer_ID = base.Columns["Manufacturer_ID"];
                this.columnModel_ID = base.Columns["Model_ID"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnPurchase_Price_Currency_Code = base.Columns["Purchase_Price_Currency_Code"];
                this.columnSales_Price = base.Columns["Sales_Price"];
                this.columnSales_Price_Currency_Code = base.Columns["Sales_Price_Currency_Code"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnBin_ID = base.Columns["Bin_ID"];
                this.columnInserted_by = base.Columns["Inserted_by"];
                this.columnInserted_on = base.Columns["Inserted_on"];
                this.columnModified_by = base.Columns["Modified_by"];
                this.columnModified_on = base.Columns["Modified_on"];
                this.columnLength = base.Columns["Length"];
                this.columnWidth = base.Columns["Width"];
                this.columnHeight = base.Columns["Height"];
                this.columnWeight = base.Columns["Weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItem_ID = new global::System.Data.DataColumn("Item_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_ID);
                this.columnItem_Type = new global::System.Data.DataColumn("Item_Type", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Type);
                this.columnNo = new global::System.Data.DataColumn("No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnit_of_Measure = new global::System.Data.DataColumn("Unit_of_Measure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_of_Measure);
                this.columnManufacturer_ID = new global::System.Data.DataColumn("Manufacturer_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_ID);
                this.columnModel_ID = new global::System.Data.DataColumn("Model_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_ID);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnPurchase_Price_Currency_Code = new global::System.Data.DataColumn("Purchase_Price_Currency_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price_Currency_Code);
                this.columnSales_Price = new global::System.Data.DataColumn("Sales_Price", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Price);
                this.columnSales_Price_Currency_Code = new global::System.Data.DataColumn("Sales_Price_Currency_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Price_Currency_Code);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnBin_ID = new global::System.Data.DataColumn("Bin_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBin_ID);
                this.columnInserted_by = new global::System.Data.DataColumn("Inserted_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_by);
                this.columnInserted_on = new global::System.Data.DataColumn("Inserted_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_on);
                this.columnModified_by = new global::System.Data.DataColumn("Modified_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_by);
                this.columnModified_on = new global::System.Data.DataColumn("Modified_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_on);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnWidth = new global::System.Data.DataColumn("Width", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidth);
                this.columnHeight = new global::System.Data.DataColumn("Height", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeight);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItem_ID}, true));
                this.columnItem_ID.AutoIncrement = true;
                this.columnItem_ID.AutoIncrementSeed = -1;
                this.columnItem_ID.AutoIncrementStep = -1;
                this.columnItem_ID.AllowDBNull = false;
                this.columnItem_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRow NewitemRow() {
                return ((itemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new itemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(itemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.itemRowChanged != null)) {
                    this.itemRowChanged(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.itemRowChanging != null)) {
                    this.itemRowChanging(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.itemRowDeleted != null)) {
                    this.itemRowDeleted(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.itemRowDeleting != null)) {
                    this.itemRowDeleting(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveitemRow(itemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "itemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class item_entryDataTable : global::System.Data.TypedTableBase<item_entryRow> {
            
            private global::System.Data.DataColumn columnItem_Entry_ID;
            
            private global::System.Data.DataColumn columnItem_Entry_Type_ID;
            
            private global::System.Data.DataColumn columnItem_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnBin_ID;
            
            private global::System.Data.DataColumn columnUnit_of_Measure;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDocument_No;
            
            private global::System.Data.DataColumn columnEntry_Date;
            
            private global::System.Data.DataColumn columnUser_ID;
            
            private global::System.Data.DataColumn columnPartner_ID;
            
            private global::System.Data.DataColumn columnPartner_Type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryDataTable() {
                this.TableName = "item_entry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal item_entryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected item_entryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Item_Entry_IDColumn {
                get {
                    return this.columnItem_Entry_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Item_Entry_Type_IDColumn {
                get {
                    return this.columnItem_Entry_Type_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Item_IDColumn {
                get {
                    return this.columnItem_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bin_IDColumn {
                get {
                    return this.columnBin_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unit_of_MeasureColumn {
                get {
                    return this.columnUnit_of_Measure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Document_NoColumn {
                get {
                    return this.columnDocument_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Entry_DateColumn {
                get {
                    return this.columnEntry_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn User_IDColumn {
                get {
                    return this.columnUser_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Partner_IDColumn {
                get {
                    return this.columnPartner_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Partner_TypeColumn {
                get {
                    return this.columnPartner_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRow this[int index] {
                get {
                    return ((item_entryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event item_entryRowChangeEventHandler item_entryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event item_entryRowChangeEventHandler item_entryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event item_entryRowChangeEventHandler item_entryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event item_entryRowChangeEventHandler item_entryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Additem_entryRow(item_entryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRow Additem_entryRow(long Item_Entry_Type_ID, long Item_ID, long Location_ID, float Quantity, long Bin_ID, string Unit_of_Measure, float Price, float Amount, string Document_No, System.DateTime Entry_Date, long User_ID, long Partner_ID, long Partner_Type) {
                item_entryRow rowitem_entryRow = ((item_entryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Item_Entry_Type_ID,
                        Item_ID,
                        Location_ID,
                        Quantity,
                        Bin_ID,
                        Unit_of_Measure,
                        Price,
                        Amount,
                        Document_No,
                        Entry_Date,
                        User_ID,
                        Partner_ID,
                        Partner_Type};
                rowitem_entryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowitem_entryRow);
                return rowitem_entryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRow FindByItem_Entry_ID(long Item_Entry_ID) {
                return ((item_entryRow)(this.Rows.Find(new object[] {
                            Item_Entry_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                item_entryDataTable cln = ((item_entryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new item_entryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItem_Entry_ID = base.Columns["Item_Entry_ID"];
                this.columnItem_Entry_Type_ID = base.Columns["Item_Entry_Type_ID"];
                this.columnItem_ID = base.Columns["Item_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnBin_ID = base.Columns["Bin_ID"];
                this.columnUnit_of_Measure = base.Columns["Unit_of_Measure"];
                this.columnPrice = base.Columns["Price"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDocument_No = base.Columns["Document_No"];
                this.columnEntry_Date = base.Columns["Entry_Date"];
                this.columnUser_ID = base.Columns["User_ID"];
                this.columnPartner_ID = base.Columns["Partner_ID"];
                this.columnPartner_Type = base.Columns["Partner_Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItem_Entry_ID = new global::System.Data.DataColumn("Item_Entry_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Entry_ID);
                this.columnItem_Entry_Type_ID = new global::System.Data.DataColumn("Item_Entry_Type_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Entry_Type_ID);
                this.columnItem_ID = new global::System.Data.DataColumn("Item_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnBin_ID = new global::System.Data.DataColumn("Bin_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBin_ID);
                this.columnUnit_of_Measure = new global::System.Data.DataColumn("Unit_of_Measure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_of_Measure);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDocument_No = new global::System.Data.DataColumn("Document_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocument_No);
                this.columnEntry_Date = new global::System.Data.DataColumn("Entry_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntry_Date);
                this.columnUser_ID = new global::System.Data.DataColumn("User_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_ID);
                this.columnPartner_ID = new global::System.Data.DataColumn("Partner_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartner_ID);
                this.columnPartner_Type = new global::System.Data.DataColumn("Partner_Type", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartner_Type);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItem_Entry_ID}, true));
                this.columnItem_Entry_ID.AutoIncrement = true;
                this.columnItem_Entry_ID.AutoIncrementSeed = -1;
                this.columnItem_Entry_ID.AutoIncrementStep = -1;
                this.columnItem_Entry_ID.AllowDBNull = false;
                this.columnItem_Entry_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRow Newitem_entryRow() {
                return ((item_entryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new item_entryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(item_entryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.item_entryRowChanged != null)) {
                    this.item_entryRowChanged(this, new item_entryRowChangeEvent(((item_entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.item_entryRowChanging != null)) {
                    this.item_entryRowChanging(this, new item_entryRowChangeEvent(((item_entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.item_entryRowDeleted != null)) {
                    this.item_entryRowDeleted(this, new item_entryRowChangeEvent(((item_entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.item_entryRowDeleting != null)) {
                    this.item_entryRowDeleting(this, new item_entryRowChangeEvent(((item_entryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeitem_entryRow(item_entryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "item_entryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class manufacturerDataTable : global::System.Data.TypedTableBase<manufacturerRow> {
            
            private global::System.Data.DataColumn columnManufacturer_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCountry_Code;
            
            private global::System.Data.DataColumn columnWebsite;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerDataTable() {
                this.TableName = "manufacturer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal manufacturerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected manufacturerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Manufacturer_IDColumn {
                get {
                    return this.columnManufacturer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_CodeColumn {
                get {
                    return this.columnCountry_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRow this[int index] {
                get {
                    return ((manufacturerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event manufacturerRowChangeEventHandler manufacturerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event manufacturerRowChangeEventHandler manufacturerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event manufacturerRowChangeEventHandler manufacturerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event manufacturerRowChangeEventHandler manufacturerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmanufacturerRow(manufacturerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRow AddmanufacturerRow(string Name, string Country_Code, string Website) {
                manufacturerRow rowmanufacturerRow = ((manufacturerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Country_Code,
                        Website};
                rowmanufacturerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmanufacturerRow);
                return rowmanufacturerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRow FindByManufacturer_ID(long Manufacturer_ID) {
                return ((manufacturerRow)(this.Rows.Find(new object[] {
                            Manufacturer_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                manufacturerDataTable cln = ((manufacturerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new manufacturerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnManufacturer_ID = base.Columns["Manufacturer_ID"];
                this.columnName = base.Columns["Name"];
                this.columnCountry_Code = base.Columns["Country_Code"];
                this.columnWebsite = base.Columns["Website"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnManufacturer_ID = new global::System.Data.DataColumn("Manufacturer_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCountry_Code = new global::System.Data.DataColumn("Country_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Code);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnManufacturer_ID}, true));
                this.columnManufacturer_ID.AutoIncrement = true;
                this.columnManufacturer_ID.AutoIncrementSeed = -1;
                this.columnManufacturer_ID.AutoIncrementStep = -1;
                this.columnManufacturer_ID.AllowDBNull = false;
                this.columnManufacturer_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRow NewmanufacturerRow() {
                return ((manufacturerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new manufacturerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(manufacturerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.manufacturerRowChanged != null)) {
                    this.manufacturerRowChanged(this, new manufacturerRowChangeEvent(((manufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.manufacturerRowChanging != null)) {
                    this.manufacturerRowChanging(this, new manufacturerRowChangeEvent(((manufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.manufacturerRowDeleted != null)) {
                    this.manufacturerRowDeleted(this, new manufacturerRowChangeEvent(((manufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.manufacturerRowDeleting != null)) {
                    this.manufacturerRowDeleting(this, new manufacturerRowChangeEvent(((manufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemanufacturerRow(manufacturerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "manufacturerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class modelDataTable : global::System.Data.TypedTableBase<modelRow> {
            
            private global::System.Data.DataColumn columnModel_ID;
            
            private global::System.Data.DataColumn columnManufacturer_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProduction_Date;
            
            private global::System.Data.DataColumn columnInserted_by;
            
            private global::System.Data.DataColumn columnInserted_on;
            
            private global::System.Data.DataColumn columnModified_by;
            
            private global::System.Data.DataColumn columnModified_on;
            
            private global::System.Data.DataColumn columnManufacturer_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelDataTable() {
                this.TableName = "model";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal modelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected modelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_IDColumn {
                get {
                    return this.columnModel_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Manufacturer_IDColumn {
                get {
                    return this.columnManufacturer_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Production_DateColumn {
                get {
                    return this.columnProduction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_byColumn {
                get {
                    return this.columnInserted_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inserted_onColumn {
                get {
                    return this.columnInserted_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_byColumn {
                get {
                    return this.columnModified_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modified_onColumn {
                get {
                    return this.columnModified_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Manufacturer_NameColumn {
                get {
                    return this.columnManufacturer_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRow this[int index] {
                get {
                    return ((modelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event modelRowChangeEventHandler modelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event modelRowChangeEventHandler modelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event modelRowChangeEventHandler modelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event modelRowChangeEventHandler modelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmodelRow(modelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRow AddmodelRow(long Manufacturer_ID, string Name, System.DateTime Production_Date, long Inserted_by, System.DateTime Inserted_on, long Modified_by, System.DateTime Modified_on, string Manufacturer_Name) {
                modelRow rowmodelRow = ((modelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Manufacturer_ID,
                        Name,
                        Production_Date,
                        Inserted_by,
                        Inserted_on,
                        Modified_by,
                        Modified_on,
                        Manufacturer_Name};
                rowmodelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmodelRow);
                return rowmodelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRow FindByModel_ID(long Model_ID) {
                return ((modelRow)(this.Rows.Find(new object[] {
                            Model_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                modelDataTable cln = ((modelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new modelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnModel_ID = base.Columns["Model_ID"];
                this.columnManufacturer_ID = base.Columns["Manufacturer_ID"];
                this.columnName = base.Columns["Name"];
                this.columnProduction_Date = base.Columns["Production_Date"];
                this.columnInserted_by = base.Columns["Inserted_by"];
                this.columnInserted_on = base.Columns["Inserted_on"];
                this.columnModified_by = base.Columns["Modified_by"];
                this.columnModified_on = base.Columns["Modified_on"];
                this.columnManufacturer_Name = base.Columns["Manufacturer_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnModel_ID = new global::System.Data.DataColumn("Model_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_ID);
                this.columnManufacturer_ID = new global::System.Data.DataColumn("Manufacturer_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProduction_Date = new global::System.Data.DataColumn("Production_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduction_Date);
                this.columnInserted_by = new global::System.Data.DataColumn("Inserted_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_by);
                this.columnInserted_on = new global::System.Data.DataColumn("Inserted_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInserted_on);
                this.columnModified_by = new global::System.Data.DataColumn("Modified_by", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_by);
                this.columnModified_on = new global::System.Data.DataColumn("Modified_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_on);
                this.columnManufacturer_Name = new global::System.Data.DataColumn("Manufacturer_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnModel_ID}, true));
                this.columnModel_ID.AutoIncrement = true;
                this.columnModel_ID.AutoIncrementSeed = -1;
                this.columnModel_ID.AutoIncrementStep = -1;
                this.columnModel_ID.AllowDBNull = false;
                this.columnModel_ID.Unique = true;
                this.columnManufacturer_Name.Caption = "EXPR2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRow NewmodelRow() {
                return ((modelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new modelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(modelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.modelRowChanged != null)) {
                    this.modelRowChanged(this, new modelRowChangeEvent(((modelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.modelRowChanging != null)) {
                    this.modelRowChanging(this, new modelRowChangeEvent(((modelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.modelRowDeleted != null)) {
                    this.modelRowDeleted(this, new modelRowChangeEvent(((modelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.modelRowDeleting != null)) {
                    this.modelRowDeleting(this, new modelRowChangeEvent(((modelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemodelRow(modelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "modelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class userDataTable : global::System.Data.TypedTableBase<userRow> {
            
            private global::System.Data.DataColumn columnUser_ID;
            
            private global::System.Data.DataColumn columnFirst_Name;
            
            private global::System.Data.DataColumn columnMiddle_Name;
            
            private global::System.Data.DataColumn columnFamily_Name;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnFull_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userDataTable() {
                this.TableName = "user";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal userDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected userDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn User_IDColumn {
                get {
                    return this.columnUser_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn First_NameColumn {
                get {
                    return this.columnFirst_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Middle_NameColumn {
                get {
                    return this.columnMiddle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Family_NameColumn {
                get {
                    return this.columnFamily_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Full_NameColumn {
                get {
                    return this.columnFull_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRow this[int index] {
                get {
                    return ((userRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event userRowChangeEventHandler userRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event userRowChangeEventHandler userRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event userRowChangeEventHandler userRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event userRowChangeEventHandler userRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdduserRow(userRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRow AdduserRow(string First_Name, string Middle_Name, string Family_Name, string Password, string Email, string Telephone, string Username, string Full_Name) {
                userRow rowuserRow = ((userRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        First_Name,
                        Middle_Name,
                        Family_Name,
                        Password,
                        Email,
                        Telephone,
                        Username,
                        Full_Name};
                rowuserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuserRow);
                return rowuserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRow FindByUser_ID(long User_ID) {
                return ((userRow)(this.Rows.Find(new object[] {
                            User_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                userDataTable cln = ((userDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new userDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUser_ID = base.Columns["User_ID"];
                this.columnFirst_Name = base.Columns["First_Name"];
                this.columnMiddle_Name = base.Columns["Middle_Name"];
                this.columnFamily_Name = base.Columns["Family_Name"];
                this.columnPassword = base.Columns["Password"];
                this.columnEmail = base.Columns["Email"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnUsername = base.Columns["Username"];
                this.columnFull_Name = base.Columns["Full_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUser_ID = new global::System.Data.DataColumn("User_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_ID);
                this.columnFirst_Name = new global::System.Data.DataColumn("First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Name);
                this.columnMiddle_Name = new global::System.Data.DataColumn("Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddle_Name);
                this.columnFamily_Name = new global::System.Data.DataColumn("Family_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamily_Name);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnFull_Name = new global::System.Data.DataColumn("Full_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFull_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUser_ID}, true));
                this.columnUser_ID.AutoIncrement = true;
                this.columnUser_ID.AutoIncrementSeed = -1;
                this.columnUser_ID.AutoIncrementStep = -1;
                this.columnUser_ID.AllowDBNull = false;
                this.columnUser_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRow NewuserRow() {
                return ((userRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new userRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(userRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.userRowChanged != null)) {
                    this.userRowChanged(this, new userRowChangeEvent(((userRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.userRowChanging != null)) {
                    this.userRowChanging(this, new userRowChangeEvent(((userRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.userRowDeleted != null)) {
                    this.userRowDeleted(this, new userRowChangeEvent(((userRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.userRowDeleting != null)) {
                    this.userRowDeleting(this, new userRowChangeEvent(((userRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveuserRow(userRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "userDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class binRow : global::System.Data.DataRow {
            
            private binDataTable tablebin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal binRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebin = ((binDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bin_ID {
                get {
                    return ((long)(this[this.tablebin.Bin_IDColumn]));
                }
                set {
                    this[this.tablebin.Bin_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Location_ID {
                get {
                    try {
                        return ((long)(this[this.tablebin.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablebin.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Length {
                get {
                    try {
                        return ((float)(this[this.tablebin.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Width {
                get {
                    try {
                        return ((float)(this[this.tablebin.WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Width\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Height {
                get {
                    try {
                        return ((float)(this[this.tablebin.HeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Height\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.HeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Max_Weight {
                get {
                    try {
                        return ((float)(this[this.tablebin.Max_WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Weight\' in table \'bin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebin.Max_WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tablebin.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocation_IDNull() {
                this[this.tablebin.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablebin.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tablebin.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLengthNull() {
                return this.IsNull(this.tablebin.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLengthNull() {
                this[this.tablebin.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWidthNull() {
                return this.IsNull(this.tablebin.WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWidthNull() {
                this[this.tablebin.WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeightNull() {
                return this.IsNull(this.tablebin.HeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeightNull() {
                this[this.tablebin.HeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_WeightNull() {
                return this.IsNull(this.tablebin.Max_WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_WeightNull() {
                this[this.tablebin.Max_WeightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class locationRow : global::System.Data.DataRow {
            
            private locationDataTable tablelocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal locationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelocation = ((locationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Location_ID {
                get {
                    return ((long)(this[this.tablelocation.Location_IDColumn]));
                }
                set {
                    this[this.tablelocation.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablelocation.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tablelocation.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long User_ID {
                get {
                    try {
                        return ((long)(this[this.tablelocation.User_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_ID\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.User_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Require_Bin {
                get {
                    try {
                        return ((int)(this[this.tablelocation.Require_BinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Require_Bin\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.Require_BinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Inserted_by {
                get {
                    try {
                        return ((long)(this[this.tablelocation.Inserted_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_by\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.Inserted_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Inserted_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelocation.Inserted_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_on\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.Inserted_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Modified_by {
                get {
                    try {
                        return ((long)(this[this.tablelocation.Modified_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_by\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.Modified_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modified_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelocation.Modified_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_on\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.Modified_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Test {
                get {
                    try {
                        return ((string)(this[this.tablelocation.TestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test\' in table \'location\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelocation.TestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablelocation.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tablelocation.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tablelocation.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tablelocation.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUser_IDNull() {
                return this.IsNull(this.tablelocation.User_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUser_IDNull() {
                this[this.tablelocation.User_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequire_BinNull() {
                return this.IsNull(this.tablelocation.Require_BinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequire_BinNull() {
                this[this.tablelocation.Require_BinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_byNull() {
                return this.IsNull(this.tablelocation.Inserted_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_byNull() {
                this[this.tablelocation.Inserted_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_onNull() {
                return this.IsNull(this.tablelocation.Inserted_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_onNull() {
                this[this.tablelocation.Inserted_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_byNull() {
                return this.IsNull(this.tablelocation.Modified_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_byNull() {
                this[this.tablelocation.Modified_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_onNull() {
                return this.IsNull(this.tablelocation.Modified_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_onNull() {
                this[this.tablelocation.Modified_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestNull() {
                return this.IsNull(this.tablelocation.TestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestNull() {
                this[this.tablelocation.TestColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class currencyRow : global::System.Data.DataRow {
            
            private currencyDataTable tablecurrency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal currencyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecurrency = ((currencyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tablecurrency.CodeColumn]));
                }
                set {
                    this[this.tablecurrency.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablecurrency.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'currency\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecurrency.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablecurrency.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tablecurrency.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class customerRow : global::System.Data.DataRow {
            
            private customerDataTable tablecustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecustomer = ((customerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Customer_ID {
                get {
                    return ((long)(this[this.tablecustomer.Customer_IDColumn]));
                }
                set {
                    this[this.tablecustomer.Customer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country_Code {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Country_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country_Code\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Country_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Post_Code {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Post_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Code\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Post_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone_No {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Phone_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone_No\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Phone_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fax_No {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Fax_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax_No\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Fax_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Discount_Percent {
                get {
                    try {
                        return ((float)(this[this.tablecustomer.Discount_PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount_Percent\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Discount_PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Identification_No {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Identification_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Identification_No\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Identification_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VAT_Registered {
                get {
                    try {
                        return ((int)(this[this.tablecustomer.VAT_RegisteredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Registered\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.VAT_RegisteredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VAT_Registration_No {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.VAT_Registration_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Registration_No\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.VAT_Registration_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Responsible_Person {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Responsible_PersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Responsible_Person\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Responsible_PersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Payment_Method {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.Payment_MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Method\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Payment_MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Payment_Terms {
                get {
                    try {
                        return ((int)(this[this.tablecustomer.Payment_TermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Terms\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.Payment_TermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablecustomer.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tablecustomer.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tablecustomer.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tablecustomer.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountry_CodeNull() {
                return this.IsNull(this.tablecustomer.Country_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountry_CodeNull() {
                this[this.tablecustomer.Country_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tablecustomer.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tablecustomer.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPost_CodeNull() {
                return this.IsNull(this.tablecustomer.Post_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPost_CodeNull() {
                this[this.tablecustomer.Post_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhone_NoNull() {
                return this.IsNull(this.tablecustomer.Phone_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhone_NoNull() {
                this[this.tablecustomer.Phone_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFax_NoNull() {
                return this.IsNull(this.tablecustomer.Fax_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFax_NoNull() {
                this[this.tablecustomer.Fax_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tablecustomer.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmailNull() {
                this[this.tablecustomer.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiscount_PercentNull() {
                return this.IsNull(this.tablecustomer.Discount_PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiscount_PercentNull() {
                this[this.tablecustomer.Discount_PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdentification_NoNull() {
                return this.IsNull(this.tablecustomer.Identification_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdentification_NoNull() {
                this[this.tablecustomer.Identification_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_RegisteredNull() {
                return this.IsNull(this.tablecustomer.VAT_RegisteredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_RegisteredNull() {
                this[this.tablecustomer.VAT_RegisteredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_Registration_NoNull() {
                return this.IsNull(this.tablecustomer.VAT_Registration_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_Registration_NoNull() {
                this[this.tablecustomer.VAT_Registration_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResponsible_PersonNull() {
                return this.IsNull(this.tablecustomer.Responsible_PersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResponsible_PersonNull() {
                this[this.tablecustomer.Responsible_PersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayment_MethodNull() {
                return this.IsNull(this.tablecustomer.Payment_MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayment_MethodNull() {
                this[this.tablecustomer.Payment_MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayment_TermsNull() {
                return this.IsNull(this.tablecustomer.Payment_TermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayment_TermsNull() {
                this[this.tablecustomer.Payment_TermsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class itemRow : global::System.Data.DataRow {
            
            private itemDataTable tableitem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal itemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableitem = ((itemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Item_ID {
                get {
                    return ((long)(this[this.tableitem.Item_IDColumn]));
                }
                set {
                    this[this.tableitem.Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Item_Type {
                get {
                    try {
                        return ((long)(this[this.tableitem.Item_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Type\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Item_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string No {
                get {
                    try {
                        return ((string)(this[this.tableitem.NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableitem.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Unit_of_Measure {
                get {
                    try {
                        return ((string)(this[this.tableitem.Unit_of_MeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_of_Measure\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Unit_of_MeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Manufacturer_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem.Manufacturer_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_ID\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Manufacturer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Model_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem.Model_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Model_ID\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Model_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Purchase_Price {
                get {
                    try {
                        return ((float)(this[this.tableitem.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Purchase_Price_Currency_Code {
                get {
                    try {
                        return ((string)(this[this.tableitem.Purchase_Price_Currency_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price_Currency_Code\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Purchase_Price_Currency_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Sales_Price {
                get {
                    try {
                        return ((float)(this[this.tableitem.Sales_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Price\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Sales_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sales_Price_Currency_Code {
                get {
                    try {
                        return ((string)(this[this.tableitem.Sales_Price_Currency_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Price_Currency_Code\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Sales_Price_Currency_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Location_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bin_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem.Bin_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bin_ID\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Bin_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Inserted_by {
                get {
                    try {
                        return ((long)(this[this.tableitem.Inserted_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_by\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Inserted_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Inserted_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableitem.Inserted_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_on\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Inserted_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Modified_by {
                get {
                    try {
                        return ((long)(this[this.tableitem.Modified_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_by\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Modified_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modified_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableitem.Modified_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_on\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.Modified_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Length {
                get {
                    try {
                        return ((float)(this[this.tableitem.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Width {
                get {
                    try {
                        return ((float)(this[this.tableitem.WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Width\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Height {
                get {
                    try {
                        return ((float)(this[this.tableitem.HeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Height\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.HeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Weight {
                get {
                    try {
                        return ((float)(this[this.tableitem.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItem_TypeNull() {
                return this.IsNull(this.tableitem.Item_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItem_TypeNull() {
                this[this.tableitem.Item_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoNull() {
                return this.IsNull(this.tableitem.NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoNull() {
                this[this.tableitem.NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableitem.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableitem.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnit_of_MeasureNull() {
                return this.IsNull(this.tableitem.Unit_of_MeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnit_of_MeasureNull() {
                this[this.tableitem.Unit_of_MeasureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturer_IDNull() {
                return this.IsNull(this.tableitem.Manufacturer_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturer_IDNull() {
                this[this.tableitem.Manufacturer_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModel_IDNull() {
                return this.IsNull(this.tableitem.Model_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModel_IDNull() {
                this[this.tableitem.Model_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableitem.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchase_PriceNull() {
                this[this.tableitem.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchase_Price_Currency_CodeNull() {
                return this.IsNull(this.tableitem.Purchase_Price_Currency_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchase_Price_Currency_CodeNull() {
                this[this.tableitem.Purchase_Price_Currency_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSales_PriceNull() {
                return this.IsNull(this.tableitem.Sales_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSales_PriceNull() {
                this[this.tableitem.Sales_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSales_Price_Currency_CodeNull() {
                return this.IsNull(this.tableitem.Sales_Price_Currency_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSales_Price_Currency_CodeNull() {
                this[this.tableitem.Sales_Price_Currency_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableitem.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocation_IDNull() {
                this[this.tableitem.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBin_IDNull() {
                return this.IsNull(this.tableitem.Bin_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBin_IDNull() {
                this[this.tableitem.Bin_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_byNull() {
                return this.IsNull(this.tableitem.Inserted_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_byNull() {
                this[this.tableitem.Inserted_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_onNull() {
                return this.IsNull(this.tableitem.Inserted_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_onNull() {
                this[this.tableitem.Inserted_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_byNull() {
                return this.IsNull(this.tableitem.Modified_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_byNull() {
                this[this.tableitem.Modified_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_onNull() {
                return this.IsNull(this.tableitem.Modified_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_onNull() {
                this[this.tableitem.Modified_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLengthNull() {
                return this.IsNull(this.tableitem.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLengthNull() {
                this[this.tableitem.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWidthNull() {
                return this.IsNull(this.tableitem.WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWidthNull() {
                this[this.tableitem.WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeightNull() {
                return this.IsNull(this.tableitem.HeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeightNull() {
                this[this.tableitem.HeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tableitem.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tableitem.WeightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class item_entryRow : global::System.Data.DataRow {
            
            private item_entryDataTable tableitem_entry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal item_entryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableitem_entry = ((item_entryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Item_Entry_ID {
                get {
                    return ((long)(this[this.tableitem_entry.Item_Entry_IDColumn]));
                }
                set {
                    this[this.tableitem_entry.Item_Entry_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Item_Entry_Type_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Item_Entry_Type_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Entry_Type_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Item_Entry_Type_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Item_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Location_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Quantity {
                get {
                    try {
                        return ((float)(this[this.tableitem_entry.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bin_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Bin_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bin_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Bin_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Unit_of_Measure {
                get {
                    try {
                        return ((string)(this[this.tableitem_entry.Unit_of_MeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_of_Measure\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Unit_of_MeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Price {
                get {
                    try {
                        return ((float)(this[this.tableitem_entry.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Amount {
                get {
                    try {
                        return ((float)(this[this.tableitem_entry.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Document_No {
                get {
                    try {
                        return ((string)(this[this.tableitem_entry.Document_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Document_No\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Document_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Entry_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableitem_entry.Entry_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entry_Date\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Entry_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long User_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.User_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.User_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Partner_ID {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Partner_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Partner_ID\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Partner_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Partner_Type {
                get {
                    try {
                        return ((long)(this[this.tableitem_entry.Partner_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Partner_Type\' in table \'item_entry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem_entry.Partner_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItem_Entry_Type_IDNull() {
                return this.IsNull(this.tableitem_entry.Item_Entry_Type_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItem_Entry_Type_IDNull() {
                this[this.tableitem_entry.Item_Entry_Type_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItem_IDNull() {
                return this.IsNull(this.tableitem_entry.Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItem_IDNull() {
                this[this.tableitem_entry.Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableitem_entry.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocation_IDNull() {
                this[this.tableitem_entry.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableitem_entry.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableitem_entry.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBin_IDNull() {
                return this.IsNull(this.tableitem_entry.Bin_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBin_IDNull() {
                this[this.tableitem_entry.Bin_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnit_of_MeasureNull() {
                return this.IsNull(this.tableitem_entry.Unit_of_MeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnit_of_MeasureNull() {
                this[this.tableitem_entry.Unit_of_MeasureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tableitem_entry.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceNull() {
                this[this.tableitem_entry.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableitem_entry.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountNull() {
                this[this.tableitem_entry.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocument_NoNull() {
                return this.IsNull(this.tableitem_entry.Document_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocument_NoNull() {
                this[this.tableitem_entry.Document_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntry_DateNull() {
                return this.IsNull(this.tableitem_entry.Entry_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntry_DateNull() {
                this[this.tableitem_entry.Entry_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUser_IDNull() {
                return this.IsNull(this.tableitem_entry.User_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUser_IDNull() {
                this[this.tableitem_entry.User_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartner_IDNull() {
                return this.IsNull(this.tableitem_entry.Partner_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartner_IDNull() {
                this[this.tableitem_entry.Partner_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartner_TypeNull() {
                return this.IsNull(this.tableitem_entry.Partner_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartner_TypeNull() {
                this[this.tableitem_entry.Partner_TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class manufacturerRow : global::System.Data.DataRow {
            
            private manufacturerDataTable tablemanufacturer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal manufacturerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemanufacturer = ((manufacturerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Manufacturer_ID {
                get {
                    return ((long)(this[this.tablemanufacturer.Manufacturer_IDColumn]));
                }
                set {
                    this[this.tablemanufacturer.Manufacturer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablemanufacturer.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'manufacturer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemanufacturer.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country_Code {
                get {
                    try {
                        return ((string)(this[this.tablemanufacturer.Country_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country_Code\' in table \'manufacturer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemanufacturer.Country_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tablemanufacturer.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'manufacturer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemanufacturer.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablemanufacturer.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tablemanufacturer.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountry_CodeNull() {
                return this.IsNull(this.tablemanufacturer.Country_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountry_CodeNull() {
                this[this.tablemanufacturer.Country_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tablemanufacturer.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWebsiteNull() {
                this[this.tablemanufacturer.WebsiteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class modelRow : global::System.Data.DataRow {
            
            private modelDataTable tablemodel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal modelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemodel = ((modelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Model_ID {
                get {
                    return ((long)(this[this.tablemodel.Model_IDColumn]));
                }
                set {
                    this[this.tablemodel.Model_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Manufacturer_ID {
                get {
                    try {
                        return ((long)(this[this.tablemodel.Manufacturer_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_ID\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Manufacturer_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablemodel.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Production_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemodel.Production_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Production_Date\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Production_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Inserted_by {
                get {
                    try {
                        return ((long)(this[this.tablemodel.Inserted_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_by\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Inserted_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Inserted_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemodel.Inserted_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inserted_on\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Inserted_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Modified_by {
                get {
                    try {
                        return ((long)(this[this.tablemodel.Modified_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_by\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Modified_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modified_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemodel.Modified_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_on\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Modified_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Manufacturer_Name {
                get {
                    try {
                        return ((string)(this[this.tablemodel.Manufacturer_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Name\' in table \'model\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel.Manufacturer_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturer_IDNull() {
                return this.IsNull(this.tablemodel.Manufacturer_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturer_IDNull() {
                this[this.tablemodel.Manufacturer_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablemodel.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tablemodel.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProduction_DateNull() {
                return this.IsNull(this.tablemodel.Production_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProduction_DateNull() {
                this[this.tablemodel.Production_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_byNull() {
                return this.IsNull(this.tablemodel.Inserted_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_byNull() {
                this[this.tablemodel.Inserted_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInserted_onNull() {
                return this.IsNull(this.tablemodel.Inserted_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInserted_onNull() {
                this[this.tablemodel.Inserted_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_byNull() {
                return this.IsNull(this.tablemodel.Modified_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_byNull() {
                this[this.tablemodel.Modified_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified_onNull() {
                return this.IsNull(this.tablemodel.Modified_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModified_onNull() {
                this[this.tablemodel.Modified_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturer_NameNull() {
                return this.IsNull(this.tablemodel.Manufacturer_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturer_NameNull() {
                this[this.tablemodel.Manufacturer_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class userRow : global::System.Data.DataRow {
            
            private userDataTable tableuser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal userRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuser = ((userDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long User_ID {
                get {
                    return ((long)(this[this.tableuser.User_IDColumn]));
                }
                set {
                    this[this.tableuser.User_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string First_Name {
                get {
                    try {
                        return ((string)(this[this.tableuser.First_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First_Name\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableuser.Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Middle_Name\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Family_Name {
                get {
                    try {
                        return ((string)(this[this.tableuser.Family_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Family_Name\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.Family_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tableuser.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Password\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableuser.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tableuser.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telephone\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Username {
                get {
                    try {
                        return ((string)(this[this.tableuser.UsernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Username\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Full_Name {
                get {
                    try {
                        return ((string)(this[this.tableuser.Full_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Full_Name\' in table \'user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuser.Full_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirst_NameNull() {
                return this.IsNull(this.tableuser.First_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirst_NameNull() {
                this[this.tableuser.First_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMiddle_NameNull() {
                return this.IsNull(this.tableuser.Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMiddle_NameNull() {
                this[this.tableuser.Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFamily_NameNull() {
                return this.IsNull(this.tableuser.Family_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFamily_NameNull() {
                this[this.tableuser.Family_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableuser.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPasswordNull() {
                this[this.tableuser.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableuser.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmailNull() {
                this[this.tableuser.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tableuser.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNull() {
                this[this.tableuser.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsernameNull() {
                return this.IsNull(this.tableuser.UsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUsernameNull() {
                this[this.tableuser.UsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFull_NameNull() {
                return this.IsNull(this.tableuser.Full_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFull_NameNull() {
                this[this.tableuser.Full_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class binRowChangeEvent : global::System.EventArgs {
            
            private binRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRowChangeEvent(binRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public binRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class locationRowChangeEvent : global::System.EventArgs {
            
            private locationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRowChangeEvent(locationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public locationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class currencyRowChangeEvent : global::System.EventArgs {
            
            private currencyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRowChangeEvent(currencyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public currencyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class customerRowChangeEvent : global::System.EventArgs {
            
            private customerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRowChangeEvent(customerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class itemRowChangeEvent : global::System.EventArgs {
            
            private itemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRowChangeEvent(itemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public itemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class item_entryRowChangeEvent : global::System.EventArgs {
            
            private item_entryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRowChangeEvent(item_entryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public item_entryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class manufacturerRowChangeEvent : global::System.EventArgs {
            
            private manufacturerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRowChangeEvent(manufacturerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public manufacturerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class modelRowChangeEvent : global::System.EventArgs {
            
            private modelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRowChangeEvent(modelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public modelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class userRowChangeEvent : global::System.EventArgs {
            
            private userRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRowChangeEvent(userRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public userRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WMS.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class binTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public binTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bin";
            tableMapping.ColumnMappings.Add("Bin_ID", "Bin_ID");
            tableMapping.ColumnMappings.Add("Location_ID", "Location_ID");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Length", "Length");
            tableMapping.ColumnMappings.Add("Width", "Width");
            tableMapping.ColumnMappings.Add("Height", "Height");
            tableMapping.ColumnMappings.Add("Max_Weight", "Max_Weight");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM beroebo_wms`.bin` WHERE ((Bin_ID` = :Original_Bin_ID) AND ((:IsNull_Location_ID = 1 AND Location_ID` IS NULL) OR (Location_ID` = :Original_Location_ID)) AND ((:IsNull_Description = 1 AND Description` IS NULL) OR (Description` = :Original_Description)) AND ((:IsNull_Length = 1 AND Length` IS NULL) OR (Length` = :Original_Length)) AND ((:IsNull_Width = 1 AND Width` IS NULL) OR (Width` = :Original_Width)) AND ((:IsNull_Height = 1 AND Height` IS NULL) OR (Height` = :Original_Height)) AND ((:IsNull_Max_Weight = 1 AND Max_Weight` IS NULL) OR (Max_Weight` = :Original_Max_Weight)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Length";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Width";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Height";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Max_Weight";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Max_Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Max_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Max_Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO beroebo_wms`.bin` (Bin_ID`, Location_ID`, Description`, Length`, Widt" +
                "h`, Height`, Max_Weight`) VALUES (:Bin_ID, :Location_ID, :Description, :Length, " +
                ":Width, :Height, :Max_Weight)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Max_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Max_Weight";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE beroebo_wms`.bin` SET Bin_ID` = :Bin_ID, Location_ID` = :Location_ID, Description` = :Description, Length` = :Length, Width` = :Width, Height` = :Height, Max_Weight` = :Max_Weight WHERE ((Bin_ID` = :Original_Bin_ID) AND ((:IsNull_Location_ID = 1 AND Location_ID` IS NULL) OR (Location_ID` = :Original_Location_ID)) AND ((:IsNull_Description = 1 AND Description` IS NULL) OR (Description` = :Original_Description)) AND ((:IsNull_Length = 1 AND Length` IS NULL) OR (Length` = :Original_Length)) AND ((:IsNull_Width = 1 AND Width` IS NULL) OR (Width` = :Original_Width)) AND ((:IsNull_Height = 1 AND Height` IS NULL) OR (Height` = :Original_Height)) AND ((:IsNull_Max_Weight = 1 AND Max_Weight` IS NULL) OR (Max_Weight` = :Original_Max_Weight)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Max_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Max_Weight";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Length";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Width";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Height";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Max_Weight";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Max_Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Max_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Max_Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        bin.*\r\nFROM            bin";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.binDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.binDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.binDataTable dataTable = new DataSet1.binDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.binDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "bin");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Bin_ID, global::System.Nullable<long> Original_Location_ID, string Original_Description, byte[] Original_Length, byte[] Original_Width, byte[] Original_Height, byte[] Original_Max_Weight) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Bin_ID));
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            if ((Original_Length == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((byte[])(Original_Length));
            }
            if ((Original_Width == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_Width));
            }
            if ((Original_Height == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte[])(Original_Height));
            }
            if ((Original_Max_Weight == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((byte[])(Original_Max_Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Bin_ID, global::System.Nullable<long> Location_ID, string Description, byte[] Length, byte[] Width, byte[] Height, byte[] Max_Weight) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Bin_ID));
            if ((Location_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((Length == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((byte[])(Length));
            }
            if ((Width == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(Width));
            }
            if ((Height == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte[])(Height));
            }
            if ((Max_Weight == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(Max_Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long Bin_ID, global::System.Nullable<long> Location_ID, string Description, byte[] Length, byte[] Width, byte[] Height, byte[] Max_Weight, long Original_Bin_ID, global::System.Nullable<long> Original_Location_ID, string Original_Description, byte[] Original_Length, byte[] Original_Width, byte[] Original_Height, byte[] Original_Max_Weight) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Bin_ID));
            if ((Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((Length == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((byte[])(Length));
            }
            if ((Width == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(Width));
            }
            if ((Height == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte[])(Height));
            }
            if ((Max_Weight == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(Max_Weight));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Bin_ID));
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Description));
            }
            if ((Original_Length == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((byte[])(Original_Length));
            }
            if ((Original_Width == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte[])(Original_Width));
            }
            if ((Original_Height == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte[])(Original_Height));
            }
            if ((Original_Max_Weight == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((byte[])(Original_Max_Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Location_ID, string Description, byte[] Length, byte[] Width, byte[] Height, byte[] Max_Weight, long Original_Bin_ID, global::System.Nullable<long> Original_Location_ID, string Original_Description, byte[] Original_Length, byte[] Original_Width, byte[] Original_Height, byte[] Original_Max_Weight) {
            return this.Update(Original_Bin_ID, Location_ID, Description, Length, Width, Height, Max_Weight, Original_Bin_ID, Original_Location_ID, Original_Description, Original_Length, Original_Width, Original_Height, Original_Max_Weight);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class locationTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public locationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "location";
            tableMapping.ColumnMappings.Add("Location_ID", "Location_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("User_ID", "User_ID");
            tableMapping.ColumnMappings.Add("Require_Bin", "Require_Bin");
            tableMapping.ColumnMappings.Add("Inserted_by", "Inserted_by");
            tableMapping.ColumnMappings.Add("Inserted_on", "Inserted_on");
            tableMapping.ColumnMappings.Add("Modified_by", "Modified_by");
            tableMapping.ColumnMappings.Add("Modified_on", "Modified_on");
            tableMapping.ColumnMappings.Add("Test", "Test");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM beroebo_wms`.location` WHERE ((Location_ID` = :Original_Location_ID) AND ((:IsNull_Name = 1 AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:IsNull_Address = 1 AND Address` IS NULL) OR (Address` = :Original_Address)) AND ((:IsNull_User_ID = 1 AND User_ID` IS NULL) OR (User_ID` = :Original_User_ID)) AND ((:IsNull_Require_Bin = 1 AND Require_Bin` IS NULL) OR (Require_Bin` = :Original_Require_Bin)) AND ((:IsNull_Inserted_by = 1 AND Inserted_by` IS NULL) OR (Inserted_by` = :Original_Inserted_by)) AND ((:IsNull_Inserted_on = 1 AND Inserted_on` IS NULL) OR (Inserted_on` = :Original_Inserted_on)) AND ((:IsNull_Modified_by = 1 AND Modified_by` IS NULL) OR (Modified_by` = :Original_Modified_by)) AND ((:IsNull_Modified_on = 1 AND Modified_on` IS NULL) OR (Modified_on` = :Original_Modified_on)) AND ((:IsNull_Test = 1 AND Test` IS NULL) OR (Test` = :Original_Test)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Address";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Address";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_User_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Test";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Test";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Test";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Test";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO beroebo_wms`.location` (Location_ID`, Name`, Address`, User_ID`, Require_Bin`, Inserted_by`, Inserted_on`, Modified_by`, Modified_on`, Test`) VALUES (:Location_ID, :Name, :Address, :User_ID, :Require_Bin, :Inserted_by, :Inserted_on, :Modified_by, :Modified_on, :Test)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Address";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Address";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Test";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Test";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE beroebo_wms`.location` SET Location_ID` = :Location_ID, Name` = :Name, Address` = :Address, User_ID` = :User_ID, Require_Bin` = :Require_Bin, Inserted_by` = :Inserted_by, Inserted_on` = :Inserted_on, Modified_by` = :Modified_by, Modified_on` = :Modified_on, Test` = :Test WHERE ((Location_ID` = :Original_Location_ID) AND ((:IsNull_Name = 1 AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:IsNull_Address = 1 AND Address` IS NULL) OR (Address` = :Original_Address)) AND ((:IsNull_User_ID = 1 AND User_ID` IS NULL) OR (User_ID` = :Original_User_ID)) AND ((:IsNull_Require_Bin = 1 AND Require_Bin` IS NULL) OR (Require_Bin` = :Original_Require_Bin)) AND ((:IsNull_Inserted_by = 1 AND Inserted_by` IS NULL) OR (Inserted_by` = :Original_Inserted_by)) AND ((:IsNull_Inserted_on = 1 AND Inserted_on` IS NULL) OR (Inserted_on` = :Original_Inserted_on)) AND ((:IsNull_Modified_by = 1 AND Modified_by` IS NULL) OR (Modified_by` = :Original_Modified_by)) AND ((:IsNull_Modified_on = 1 AND Modified_on` IS NULL) OR (Modified_on` = :Original_Modified_on)) AND ((:IsNull_Test = 1 AND Test` IS NULL) OR (Test` = :Original_Test)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Address";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Address";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Test";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Test";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Address";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Address";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_User_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Require_Bin";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Require_Bin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Test";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Test";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Test";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Test";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        location.*\r\nFROM            location";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.locationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.locationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.locationDataTable dataTable = new DataSet1.locationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.locationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "location");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Location_ID, string Original_Name, string Original_Address, global::System.Nullable<long> Original_User_ID, global::System.Nullable<int> Original_Require_Bin, global::System.Nullable<long> Original_Inserted_by, global::System.Nullable<global::System.DateTime> Original_Inserted_on, global::System.Nullable<long> Original_Modified_by, global::System.Nullable<global::System.DateTime> Original_Modified_on, string Original_Test) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Location_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Address == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Address));
            }
            if ((Original_User_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_User_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Require_Bin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Require_Bin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_by.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Inserted_by.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Inserted_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_by.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((long)(Original_Modified_by.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_Modified_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Test == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Test));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Location_ID, string Name, string Address, global::System.Nullable<long> User_ID, global::System.Nullable<int> Require_Bin, global::System.Nullable<long> Inserted_by, global::System.Nullable<global::System.DateTime> Inserted_on, global::System.Nullable<long> Modified_by, global::System.Nullable<global::System.DateTime> Modified_on, string Test) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Location_ID));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((User_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(User_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Require_Bin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Require_Bin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Inserted_by.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Inserted_by.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Inserted_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Inserted_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Modified_by.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Modified_by.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Modified_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Modified_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Test == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Test));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Location_ID, 
                    string Name, 
                    string Address, 
                    global::System.Nullable<long> User_ID, 
                    global::System.Nullable<int> Require_Bin, 
                    global::System.Nullable<long> Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Inserted_on, 
                    global::System.Nullable<long> Modified_by, 
                    global::System.Nullable<global::System.DateTime> Modified_on, 
                    string Test, 
                    long Original_Location_ID, 
                    string Original_Name, 
                    string Original_Address, 
                    global::System.Nullable<long> Original_User_ID, 
                    global::System.Nullable<int> Original_Require_Bin, 
                    global::System.Nullable<long> Original_Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Original_Inserted_on, 
                    global::System.Nullable<long> Original_Modified_by, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_on, 
                    string Original_Test) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Location_ID));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((User_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(User_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Require_Bin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Require_Bin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Inserted_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Inserted_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Inserted_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Inserted_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Modified_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Modified_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Modified_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Modified_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Test == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Test));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_Location_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Name));
            }
            if ((Original_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Address));
            }
            if ((Original_User_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(Original_User_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Require_Bin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Require_Bin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_Inserted_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_Inserted_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_Modified_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_Modified_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Test == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Test));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string Address, 
                    global::System.Nullable<long> User_ID, 
                    global::System.Nullable<int> Require_Bin, 
                    global::System.Nullable<long> Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Inserted_on, 
                    global::System.Nullable<long> Modified_by, 
                    global::System.Nullable<global::System.DateTime> Modified_on, 
                    string Test, 
                    long Original_Location_ID, 
                    string Original_Name, 
                    string Original_Address, 
                    global::System.Nullable<long> Original_User_ID, 
                    global::System.Nullable<int> Original_Require_Bin, 
                    global::System.Nullable<long> Original_Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Original_Inserted_on, 
                    global::System.Nullable<long> Original_Modified_by, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_on, 
                    string Original_Test) {
            return this.Update(Original_Location_ID, Name, Address, User_ID, Require_Bin, Inserted_by, Inserted_on, Modified_by, Modified_on, Test, Original_Location_ID, Original_Name, Original_Address, Original_User_ID, Original_Require_Bin, Original_Inserted_by, Original_Inserted_on, Original_Modified_by, Original_Modified_on, Original_Test);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class currencyTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public currencyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "currency";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM beroebo_wms`.currency` WHERE ((Code` = :Original_Code) AND ((:IsNull_" +
                "Description = 1 AND Description` IS NULL) OR (Description` = :Original_Descripti" +
                "on)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO beroebo_wms`.currency` (Code`, Description`) VALUES (:Code, :Descript" +
                "ion)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE beroebo_wms`.currency` SET Code` = :Code, Description` = :Description WHER" +
                "E ((Code` = :Original_Code) AND ((:IsNull_Description = 1 AND Description` IS NU" +
                "LL) OR (Description` = :Original_Description)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        currency.*\r\nFROM            currency";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.currencyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.currencyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.currencyDataTable dataTable = new DataSet1.currencyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.currencyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "currency");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Code, string Original_Description) {
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Code, string Description) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Code, string Description, string Original_Code, string Original_Description) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
            }
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Description, string Original_Code, string Original_Description) {
            return this.Update(Original_Code, Description, Original_Code, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class customerTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public customerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "customer";
            tableMapping.ColumnMappings.Add("Customer_ID", "Customer_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Post_Code", "Post_Code");
            tableMapping.ColumnMappings.Add("Phone_No", "Phone_No");
            tableMapping.ColumnMappings.Add("Fax_No", "Fax_No");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Discount_Percent", "Discount_Percent");
            tableMapping.ColumnMappings.Add("Identification_No", "Identification_No");
            tableMapping.ColumnMappings.Add("VAT_Registered", "VAT_Registered");
            tableMapping.ColumnMappings.Add("VAT_Registration_No", "VAT_Registration_No");
            tableMapping.ColumnMappings.Add("Responsible_Person", "Responsible_Person");
            tableMapping.ColumnMappings.Add("Payment_Method", "Payment_Method");
            tableMapping.ColumnMappings.Add("Payment_Terms", "Payment_Terms");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM beroebo_wms`.customer` WHERE ((Customer_ID` = :Original_Customer_ID) " +
                "AND ((:IsNull_Name = 1 AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:Is" +
                "Null_Type = 1 AND Type` IS NULL) OR (Type` = :Original_Type)) AND ((:IsNull_Coun" +
                "try_Code = 1 AND Country_Code` IS NULL) OR (Country_Code` = :Original_Country_Co" +
                "de)) AND ((:IsNull_City = 1 AND City` IS NULL) OR (City` = :Original_City)) AND " +
                "((:IsNull_Post_Code = 1 AND Post_Code` IS NULL) OR (Post_Code` = :Original_Post_" +
                "Code)) AND ((:IsNull_Phone_No = 1 AND Phone_No` IS NULL) OR (Phone_No` = :Origin" +
                "al_Phone_No)) AND ((:IsNull_Fax_No = 1 AND Fax_No` IS NULL) OR (Fax_No` = :Origi" +
                "nal_Fax_No)) AND ((:IsNull_Email = 1 AND Email` IS NULL) OR (Email` = :Original_" +
                "Email)) AND ((:IsNull_Discount_Percent = 1 AND Discount_Percent` IS NULL) OR (Di" +
                "scount_Percent` = :Original_Discount_Percent)) AND ((:IsNull_Identification_No =" +
                " 1 AND Identification_No` IS NULL) OR (Identification_No` = :Original_Identifica" +
                "tion_No)) AND ((:IsNull_VAT_Registered = 1 AND VAT_Registered` IS NULL) OR (VAT_" +
                "Registered` = :Original_VAT_Registered)) AND ((:IsNull_VAT_Registration_No = 1 A" +
                "ND VAT_Registration_No` IS NULL) OR (VAT_Registration_No` = :Original_VAT_Regist" +
                "ration_No)) AND ((:IsNull_Responsible_Person = 1 AND Responsible_Person` IS NULL" +
                ") OR (Responsible_Person` = :Original_Responsible_Person)) AND ((:IsNull_Payment" +
                "_Method = 1 AND Payment_Method` IS NULL) OR (Payment_Method` = :Original_Payment" +
                "_Method)) AND ((:IsNull_Payment_Terms = 1 AND Payment_Terms` IS NULL) OR (Paymen" +
                "t_Terms` = :Original_Payment_Terms)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Customer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Customer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Type";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Country_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_City";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "City";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_City";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "City";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Post_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Post_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Post_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Post_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Phone_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Phone_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Phone_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Phone_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Fax_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Fax_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Fax_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Fax_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Email";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Discount_Percent";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Discount_Percent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Discount_Percent";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Discount_Percent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Identification_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Identification_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Identification_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Identification_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_VAT_Registration_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registration_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_VAT_Registration_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "VAT_Registration_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Responsible_Person";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Responsible_Person";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Responsible_Person";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Responsible_Person";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Payment_Method";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Method";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Payment_Method";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Payment_Method";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO beroebo_wms`.customer` (Customer_ID`, Name`, Type`, Country_Code`, City`, Post_Code`, Phone_No`, Fax_No`, Email`, Discount_Percent`, Identification_No`, VAT_Registered`, VAT_Registration_No`, Responsible_Person`, Payment_Method`, Payment_Terms`) VALUES (:Customer_ID, :Name, :Type, :Country_Code, :City, :Post_Code, :Phone_No, :Fax_No, :Email, :Discount_Percent, :Identification_No, :VAT_Registered, :VAT_Registration_No, :Responsible_Person, :Payment_Method, :Payment_Terms)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Customer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Customer_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Type";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "City";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "City";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Post_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Post_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Phone_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Phone_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Fax_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Fax_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Discount_Percent";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Discount_Percent";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Identification_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Identification_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "VAT_Registration_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "VAT_Registration_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Responsible_Person";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Responsible_Person";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Payment_Method";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Payment_Method";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE beroebo_wms`.customer` SET Customer_ID` = :Customer_ID, Name` = :Name, Typ" +
                "e` = :Type, Country_Code` = :Country_Code, City` = :City, Post_Code` = :Post_Cod" +
                "e, Phone_No` = :Phone_No, Fax_No` = :Fax_No, Email` = :Email, Discount_Percent` " +
                "= :Discount_Percent, Identification_No` = :Identification_No, VAT_Registered` = " +
                ":VAT_Registered, VAT_Registration_No` = :VAT_Registration_No, Responsible_Person" +
                "` = :Responsible_Person, Payment_Method` = :Payment_Method, Payment_Terms` = :Pa" +
                "yment_Terms WHERE ((Customer_ID` = :Original_Customer_ID) AND ((:IsNull_Name = 1" +
                " AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:IsNull_Type = 1 AND Type" +
                "` IS NULL) OR (Type` = :Original_Type)) AND ((:IsNull_Country_Code = 1 AND Count" +
                "ry_Code` IS NULL) OR (Country_Code` = :Original_Country_Code)) AND ((:IsNull_Cit" +
                "y = 1 AND City` IS NULL) OR (City` = :Original_City)) AND ((:IsNull_Post_Code = " +
                "1 AND Post_Code` IS NULL) OR (Post_Code` = :Original_Post_Code)) AND ((:IsNull_P" +
                "hone_No = 1 AND Phone_No` IS NULL) OR (Phone_No` = :Original_Phone_No)) AND ((:I" +
                "sNull_Fax_No = 1 AND Fax_No` IS NULL) OR (Fax_No` = :Original_Fax_No)) AND ((:Is" +
                "Null_Email = 1 AND Email` IS NULL) OR (Email` = :Original_Email)) AND ((:IsNull_" +
                "Discount_Percent = 1 AND Discount_Percent` IS NULL) OR (Discount_Percent` = :Ori" +
                "ginal_Discount_Percent)) AND ((:IsNull_Identification_No = 1 AND Identification_" +
                "No` IS NULL) OR (Identification_No` = :Original_Identification_No)) AND ((:IsNul" +
                "l_VAT_Registered = 1 AND VAT_Registered` IS NULL) OR (VAT_Registered` = :Origina" +
                "l_VAT_Registered)) AND ((:IsNull_VAT_Registration_No = 1 AND VAT_Registration_No" +
                "` IS NULL) OR (VAT_Registration_No` = :Original_VAT_Registration_No)) AND ((:IsN" +
                "ull_Responsible_Person = 1 AND Responsible_Person` IS NULL) OR (Responsible_Pers" +
                "on` = :Original_Responsible_Person)) AND ((:IsNull_Payment_Method = 1 AND Paymen" +
                "t_Method` IS NULL) OR (Payment_Method` = :Original_Payment_Method)) AND ((:IsNul" +
                "l_Payment_Terms = 1 AND Payment_Terms` IS NULL) OR (Payment_Terms` = :Original_P" +
                "ayment_Terms)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Customer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Customer_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Type";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "City";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "City";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Post_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Post_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Phone_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Phone_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Fax_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Fax_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Discount_Percent";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Discount_Percent";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Identification_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Identification_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "VAT_Registration_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "VAT_Registration_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Responsible_Person";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Responsible_Person";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Payment_Method";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Payment_Method";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Customer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Customer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Type";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Country_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_City";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "City";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_City";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "City";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Post_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Post_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Post_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Post_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Phone_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Phone_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Phone_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Phone_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Fax_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Fax_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Fax_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Fax_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Email";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Discount_Percent";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Discount_Percent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Discount_Percent";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Discount_Percent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Identification_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Identification_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Identification_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Identification_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_VAT_Registered";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_VAT_Registration_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "VAT_Registration_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_VAT_Registration_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "VAT_Registration_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Responsible_Person";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Responsible_Person";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Responsible_Person";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Responsible_Person";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Payment_Method";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Method";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Payment_Method";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Payment_Method";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Payment_Terms";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Payment_Terms";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        customer.*\r\nFROM            customer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.customerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.customerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.customerDataTable dataTable = new DataSet1.customerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.customerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "customer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Customer_ID, 
                    string Original_Name, 
                    string Original_Type, 
                    string Original_Country_Code, 
                    string Original_City, 
                    string Original_Post_Code, 
                    string Original_Phone_No, 
                    string Original_Fax_No, 
                    string Original_Email, 
                    byte[] Original_Discount_Percent, 
                    string Original_Identification_No, 
                    global::System.Nullable<int> Original_VAT_Registered, 
                    string Original_VAT_Registration_No, 
                    string Original_Responsible_Person, 
                    string Original_Payment_Method, 
                    global::System.Nullable<int> Original_Payment_Terms) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Customer_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Type));
            }
            if ((Original_Country_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Country_Code));
            }
            if ((Original_City == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_City));
            }
            if ((Original_Post_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Post_Code));
            }
            if ((Original_Phone_No == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Phone_No));
            }
            if ((Original_Fax_No == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Fax_No));
            }
            if ((Original_Email == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Email));
            }
            if ((Original_Discount_Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((byte[])(Original_Discount_Percent));
            }
            if ((Original_Identification_No == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Identification_No));
            }
            if ((Original_VAT_Registered.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_VAT_Registered.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_VAT_Registration_No == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_VAT_Registration_No));
            }
            if ((Original_Responsible_Person == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Responsible_Person));
            }
            if ((Original_Payment_Method == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Payment_Method));
            }
            if ((Original_Payment_Terms.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Payment_Terms.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Customer_ID, 
                    string Name, 
                    string Type, 
                    string Country_Code, 
                    string City, 
                    string Post_Code, 
                    string Phone_No, 
                    string Fax_No, 
                    string Email, 
                    byte[] Discount_Percent, 
                    string Identification_No, 
                    global::System.Nullable<int> VAT_Registered, 
                    string VAT_Registration_No, 
                    string Responsible_Person, 
                    string Payment_Method, 
                    global::System.Nullable<int> Payment_Terms) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Customer_ID));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Type));
            }
            if ((Country_Code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Country_Code));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(City));
            }
            if ((Post_Code == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Post_Code));
            }
            if ((Phone_No == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Phone_No));
            }
            if ((Fax_No == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Fax_No));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Email));
            }
            if ((Discount_Percent == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(Discount_Percent));
            }
            if ((Identification_No == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Identification_No));
            }
            if ((VAT_Registered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(VAT_Registered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((VAT_Registration_No == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(VAT_Registration_No));
            }
            if ((Responsible_Person == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Responsible_Person));
            }
            if ((Payment_Method == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Payment_Method));
            }
            if ((Payment_Terms.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Payment_Terms.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Customer_ID, 
                    string Name, 
                    string Type, 
                    string Country_Code, 
                    string City, 
                    string Post_Code, 
                    string Phone_No, 
                    string Fax_No, 
                    string Email, 
                    byte[] Discount_Percent, 
                    string Identification_No, 
                    global::System.Nullable<int> VAT_Registered, 
                    string VAT_Registration_No, 
                    string Responsible_Person, 
                    string Payment_Method, 
                    global::System.Nullable<int> Payment_Terms, 
                    long Original_Customer_ID, 
                    string Original_Name, 
                    string Original_Type, 
                    string Original_Country_Code, 
                    string Original_City, 
                    string Original_Post_Code, 
                    string Original_Phone_No, 
                    string Original_Fax_No, 
                    string Original_Email, 
                    byte[] Original_Discount_Percent, 
                    string Original_Identification_No, 
                    global::System.Nullable<int> Original_VAT_Registered, 
                    string Original_VAT_Registration_No, 
                    string Original_Responsible_Person, 
                    string Original_Payment_Method, 
                    global::System.Nullable<int> Original_Payment_Terms) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Customer_ID));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Type == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Type));
            }
            if ((Country_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Country_Code));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(City));
            }
            if ((Post_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Post_Code));
            }
            if ((Phone_No == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Phone_No));
            }
            if ((Fax_No == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Fax_No));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Email));
            }
            if ((Discount_Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(Discount_Percent));
            }
            if ((Identification_No == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Identification_No));
            }
            if ((VAT_Registered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(VAT_Registered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((VAT_Registration_No == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(VAT_Registration_No));
            }
            if ((Responsible_Person == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Responsible_Person));
            }
            if ((Payment_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Payment_Method));
            }
            if ((Payment_Terms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Payment_Terms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(Original_Customer_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Name));
            }
            if ((Original_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Type));
            }
            if ((Original_Country_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Country_Code));
            }
            if ((Original_City == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_City));
            }
            if ((Original_Post_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Post_Code));
            }
            if ((Original_Phone_No == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Phone_No));
            }
            if ((Original_Fax_No == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Fax_No));
            }
            if ((Original_Email == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Email));
            }
            if ((Original_Discount_Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((byte[])(Original_Discount_Percent));
            }
            if ((Original_Identification_No == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Identification_No));
            }
            if ((Original_VAT_Registered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_VAT_Registered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_VAT_Registration_No == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_VAT_Registration_No));
            }
            if ((Original_Responsible_Person == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Responsible_Person));
            }
            if ((Original_Payment_Method == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Payment_Method));
            }
            if ((Original_Payment_Terms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_Payment_Terms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string Type, 
                    string Country_Code, 
                    string City, 
                    string Post_Code, 
                    string Phone_No, 
                    string Fax_No, 
                    string Email, 
                    byte[] Discount_Percent, 
                    string Identification_No, 
                    global::System.Nullable<int> VAT_Registered, 
                    string VAT_Registration_No, 
                    string Responsible_Person, 
                    string Payment_Method, 
                    global::System.Nullable<int> Payment_Terms, 
                    long Original_Customer_ID, 
                    string Original_Name, 
                    string Original_Type, 
                    string Original_Country_Code, 
                    string Original_City, 
                    string Original_Post_Code, 
                    string Original_Phone_No, 
                    string Original_Fax_No, 
                    string Original_Email, 
                    byte[] Original_Discount_Percent, 
                    string Original_Identification_No, 
                    global::System.Nullable<int> Original_VAT_Registered, 
                    string Original_VAT_Registration_No, 
                    string Original_Responsible_Person, 
                    string Original_Payment_Method, 
                    global::System.Nullable<int> Original_Payment_Terms) {
            return this.Update(Original_Customer_ID, Name, Type, Country_Code, City, Post_Code, Phone_No, Fax_No, Email, Discount_Percent, Identification_No, VAT_Registered, VAT_Registration_No, Responsible_Person, Payment_Method, Payment_Terms, Original_Customer_ID, Original_Name, Original_Type, Original_Country_Code, Original_City, Original_Post_Code, Original_Phone_No, Original_Fax_No, Original_Email, Original_Discount_Percent, Original_Identification_No, Original_VAT_Registered, Original_VAT_Registration_No, Original_Responsible_Person, Original_Payment_Method, Original_Payment_Terms);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class itemTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public itemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "item";
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID");
            tableMapping.ColumnMappings.Add("Item_Type", "Item_Type");
            tableMapping.ColumnMappings.Add("No", "No");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Unit_of_Measure", "Unit_of_Measure");
            tableMapping.ColumnMappings.Add("Manufacturer_ID", "Manufacturer_ID");
            tableMapping.ColumnMappings.Add("Model_ID", "Model_ID");
            tableMapping.ColumnMappings.Add("Purchase_Price", "Purchase_Price");
            tableMapping.ColumnMappings.Add("Purchase_Price_Currency_Code", "Purchase_Price_Currency_Code");
            tableMapping.ColumnMappings.Add("Sales_Price", "Sales_Price");
            tableMapping.ColumnMappings.Add("Sales_Price_Currency_Code", "Sales_Price_Currency_Code");
            tableMapping.ColumnMappings.Add("Location_ID", "Location_ID");
            tableMapping.ColumnMappings.Add("Bin_ID", "Bin_ID");
            tableMapping.ColumnMappings.Add("Inserted_by", "Inserted_by");
            tableMapping.ColumnMappings.Add("Inserted_on", "Inserted_on");
            tableMapping.ColumnMappings.Add("Modified_by", "Modified_by");
            tableMapping.ColumnMappings.Add("Modified_on", "Modified_on");
            tableMapping.ColumnMappings.Add("Length", "Length");
            tableMapping.ColumnMappings.Add("Width", "Width");
            tableMapping.ColumnMappings.Add("Height", "Height");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM beroebo_wms`.item` WHERE ((Item_ID` = :Original_Item_ID) AND ((:IsNul" +
                "l_Item_Type = 1 AND Item_Type` IS NULL) OR (Item_Type` = :Original_Item_Type)) A" +
                "ND ((:IsNull_No = 1 AND No` IS NULL) OR (No` = :Original_No)) AND ((:IsNull_Desc" +
                "ription = 1 AND Description` IS NULL) OR (Description` = :Original_Description))" +
                " AND ((:IsNull_Unit_of_Measure = 1 AND Unit_of_Measure` IS NULL) OR (Unit_of_Mea" +
                "sure` = :Original_Unit_of_Measure)) AND ((:IsNull_Manufacturer_ID = 1 AND Manufa" +
                "cturer_ID` IS NULL) OR (Manufacturer_ID` = :Original_Manufacturer_ID)) AND ((:Is" +
                "Null_Model_ID = 1 AND Model_ID` IS NULL) OR (Model_ID` = :Original_Model_ID)) AN" +
                "D ((:IsNull_Purchase_Price = 1 AND Purchase_Price` IS NULL) OR (Purchase_Price` " +
                "= :Original_Purchase_Price)) AND ((:IsNull_Purchase_Price_Currency_Code = 1 AND " +
                "Purchase_Price_Currency_Code` IS NULL) OR (Purchase_Price_Currency_Code` = :Orig" +
                "inal_Purchase_Price_Currency_Code)) AND ((:IsNull_Sales_Price = 1 AND Sales_Pric" +
                "e` IS NULL) OR (Sales_Price` = :Original_Sales_Price)) AND ((:IsNull_Sales_Price" +
                "_Currency_Code = 1 AND Sales_Price_Currency_Code` IS NULL) OR (Sales_Price_Curre" +
                "ncy_Code` = :Original_Sales_Price_Currency_Code)) AND ((:IsNull_Location_ID = 1 " +
                "AND Location_ID` IS NULL) OR (Location_ID` = :Original_Location_ID)) AND ((:IsNu" +
                "ll_Bin_ID = 1 AND Bin_ID` IS NULL) OR (Bin_ID` = :Original_Bin_ID)) AND ((:IsNul" +
                "l_Inserted_by = 1 AND Inserted_by` IS NULL) OR (Inserted_by` = :Original_Inserte" +
                "d_by)) AND ((:IsNull_Inserted_on = 1 AND Inserted_on` IS NULL) OR (Inserted_on` " +
                "= :Original_Inserted_on)) AND ((:IsNull_Modified_by = 1 AND Modified_by` IS NULL" +
                ") OR (Modified_by` = :Original_Modified_by)) AND ((:IsNull_Modified_on = 1 AND M" +
                "odified_on` IS NULL) OR (Modified_on` = :Original_Modified_on)) AND ((:IsNull_Le" +
                "ngth = 1 AND Length` IS NULL) OR (Length` = :Original_Length)) AND ((:IsNull_Wid" +
                "th = 1 AND Width` IS NULL) OR (Width` = :Original_Width)) AND ((:IsNull_Height =" +
                " 1 AND Height` IS NULL) OR (Height` = :Original_Height)) AND ((:IsNull_Weight = " +
                "1 AND Weight` IS NULL) OR (Weight` = :Original_Weight)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Unit_of_Measure";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Model_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Model_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Model_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Model_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Purchase_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Purchase_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Purchase_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Purchase_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Purchase_Price_Currency_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Purchase_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Sales_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Sales_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Sales_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Sales_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Sales_Price_Currency_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Sales_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Sales_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Sales_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Bin_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Length";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Width";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Height";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Weight";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO beroebo_wms`.item` (Item_ID`, Item_Type`, No`, Description`, Unit_of_Measure`, Manufacturer_ID`, Model_ID`, Purchase_Price`, Purchase_Price_Currency_Code`, Sales_Price`, Sales_Price_Currency_Code`, Location_ID`, Bin_ID`, Inserted_by`, Inserted_on`, Modified_by`, Modified_on`, Length`, Width`, Height`, Weight`) VALUES (:Item_ID, :Item_Type, :No, :Description, :Unit_of_Measure, :Manufacturer_ID, :Model_ID, :Purchase_Price, :Purchase_Price_Currency_Code, :Sales_Price, :Sales_Price_Currency_Code, :Location_ID, :Bin_ID, :Inserted_by, :Inserted_on, :Modified_by, :Modified_on, :Length, :Width, :Height, :Weight)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Model_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Model_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Purchase_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Purchase_Price";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Purchase_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Sales_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Sales_Price";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Sales_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Sales_Price_Currency_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Weight";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE beroebo_wms`.item` SET Item_ID` = :Item_ID, Item_Type` = :Item_Type, No` =" +
                " :No, Description` = :Description, Unit_of_Measure` = :Unit_of_Measure, Manufact" +
                "urer_ID` = :Manufacturer_ID, Model_ID` = :Model_ID, Purchase_Price` = :Purchase_" +
                "Price, Purchase_Price_Currency_Code` = :Purchase_Price_Currency_Code, Sales_Pric" +
                "e` = :Sales_Price, Sales_Price_Currency_Code` = :Sales_Price_Currency_Code, Loca" +
                "tion_ID` = :Location_ID, Bin_ID` = :Bin_ID, Inserted_by` = :Inserted_by, Inserte" +
                "d_on` = :Inserted_on, Modified_by` = :Modified_by, Modified_on` = :Modified_on, " +
                "Length` = :Length, Width` = :Width, Height` = :Height, Weight` = :Weight WHERE (" +
                "(Item_ID` = :Original_Item_ID) AND ((:IsNull_Item_Type = 1 AND Item_Type` IS NUL" +
                "L) OR (Item_Type` = :Original_Item_Type)) AND ((:IsNull_No = 1 AND No` IS NULL) " +
                "OR (No` = :Original_No)) AND ((:IsNull_Description = 1 AND Description` IS NULL)" +
                " OR (Description` = :Original_Description)) AND ((:IsNull_Unit_of_Measure = 1 AN" +
                "D Unit_of_Measure` IS NULL) OR (Unit_of_Measure` = :Original_Unit_of_Measure)) A" +
                "ND ((:IsNull_Manufacturer_ID = 1 AND Manufacturer_ID` IS NULL) OR (Manufacturer_" +
                "ID` = :Original_Manufacturer_ID)) AND ((:IsNull_Model_ID = 1 AND Model_ID` IS NU" +
                "LL) OR (Model_ID` = :Original_Model_ID)) AND ((:IsNull_Purchase_Price = 1 AND Pu" +
                "rchase_Price` IS NULL) OR (Purchase_Price` = :Original_Purchase_Price)) AND ((:I" +
                "sNull_Purchase_Price_Currency_Code = 1 AND Purchase_Price_Currency_Code` IS NULL" +
                ") OR (Purchase_Price_Currency_Code` = :Original_Purchase_Price_Currency_Code)) A" +
                "ND ((:IsNull_Sales_Price = 1 AND Sales_Price` IS NULL) OR (Sales_Price` = :Origi" +
                "nal_Sales_Price)) AND ((:IsNull_Sales_Price_Currency_Code = 1 AND Sales_Price_Cu" +
                "rrency_Code` IS NULL) OR (Sales_Price_Currency_Code` = :Original_Sales_Price_Cur" +
                "rency_Code)) AND ((:IsNull_Location_ID = 1 AND Location_ID` IS NULL) OR (Locatio" +
                "n_ID` = :Original_Location_ID)) AND ((:IsNull_Bin_ID = 1 AND Bin_ID` IS NULL) OR" +
                " (Bin_ID` = :Original_Bin_ID)) AND ((:IsNull_Inserted_by = 1 AND Inserted_by` IS" +
                " NULL) OR (Inserted_by` = :Original_Inserted_by)) AND ((:IsNull_Inserted_on = 1 " +
                "AND Inserted_on` IS NULL) OR (Inserted_on` = :Original_Inserted_on)) AND ((:IsNu" +
                "ll_Modified_by = 1 AND Modified_by` IS NULL) OR (Modified_by` = :Original_Modifi" +
                "ed_by)) AND ((:IsNull_Modified_on = 1 AND Modified_on` IS NULL) OR (Modified_on`" +
                " = :Original_Modified_on)) AND ((:IsNull_Length = 1 AND Length` IS NULL) OR (Len" +
                "gth` = :Original_Length)) AND ((:IsNull_Width = 1 AND Width` IS NULL) OR (Width`" +
                " = :Original_Width)) AND ((:IsNull_Height = 1 AND Height` IS NULL) OR (Height` =" +
                " :Original_Height)) AND ((:IsNull_Weight = 1 AND Weight` IS NULL) OR (Weight` = " +
                ":Original_Weight)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Model_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Model_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Purchase_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Purchase_Price";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Purchase_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Sales_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Sales_Price";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Sales_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Sales_Price_Currency_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Weight";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Description";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Description";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Unit_of_Measure";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Model_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Model_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Model_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Model_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Purchase_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Purchase_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Purchase_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Purchase_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Purchase_Price_Currency_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Purchase_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Purchase_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Sales_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Sales_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Sales_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Sales_Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Sales_Price_Currency_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Sales_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Sales_Price_Currency_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Sales_Price_Currency_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Bin_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Inserted_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Inserted_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Inserted_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Inserted_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_by";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_by";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Modified_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Modified_on";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Modified_on";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Modified_on";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Length";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Length";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Length";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Width";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Width";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Width";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Height";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Height";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Weight";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Weight";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        item.*\r\nFROM            item";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.itemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.itemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.itemDataTable dataTable = new DataSet1.itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.itemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "item");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Item_ID, 
                    global::System.Nullable<long> Original_Item_Type, 
                    string Original_No, 
                    string Original_Description, 
                    string Original_Unit_of_Measure, 
                    global::System.Nullable<long> Original_Manufacturer_ID, 
                    global::System.Nullable<long> Original_Model_ID, 
                    byte[] Original_Purchase_Price, 
                    string Original_Purchase_Price_Currency_Code, 
                    byte[] Original_Sales_Price, 
                    string Original_Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Original_Location_ID, 
                    global::System.Nullable<long> Original_Bin_ID, 
                    global::System.Nullable<long> Original_Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Original_Inserted_on, 
                    global::System.Nullable<long> Original_Modified_by, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_on, 
                    byte[] Original_Length, 
                    byte[] Original_Width, 
                    byte[] Original_Height, 
                    byte[] Original_Weight) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Item_ID));
            if ((Original_Item_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Item_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_No == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_No));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Description));
            }
            if ((Original_Unit_of_Measure == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Unit_of_Measure));
            }
            if ((Original_Manufacturer_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Manufacturer_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Model_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((long)(Original_Model_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Purchase_Price == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((byte[])(Original_Purchase_Price));
            }
            if ((Original_Purchase_Price_Currency_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Purchase_Price_Currency_Code));
            }
            if ((Original_Sales_Price == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((byte[])(Original_Sales_Price));
            }
            if ((Original_Sales_Price_Currency_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Sales_Price_Currency_Code));
            }
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Bin_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((long)(Original_Bin_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_by.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((long)(Original_Inserted_by.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_Inserted_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_by.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((long)(Original_Modified_by.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_on.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_Modified_on.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Length == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((byte[])(Original_Length));
            }
            if ((Original_Width == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((byte[])(Original_Width));
            }
            if ((Original_Height == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((byte[])(Original_Height));
            }
            if ((Original_Weight == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((byte[])(Original_Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Item_ID, 
                    global::System.Nullable<long> Item_Type, 
                    string No, 
                    string Description, 
                    string Unit_of_Measure, 
                    global::System.Nullable<long> Manufacturer_ID, 
                    global::System.Nullable<long> Model_ID, 
                    byte[] Purchase_Price, 
                    string Purchase_Price_Currency_Code, 
                    byte[] Sales_Price, 
                    string Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Location_ID, 
                    global::System.Nullable<long> Bin_ID, 
                    global::System.Nullable<long> Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Inserted_on, 
                    global::System.Nullable<long> Modified_by, 
                    global::System.Nullable<global::System.DateTime> Modified_on, 
                    byte[] Length, 
                    byte[] Width, 
                    byte[] Height, 
                    byte[] Weight) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Item_ID));
            if ((Item_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Item_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((No == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(No));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Unit_of_Measure == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Unit_of_Measure));
            }
            if ((Manufacturer_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Manufacturer_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Model_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Model_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Purchase_Price == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(Purchase_Price));
            }
            if ((Purchase_Price_Currency_Code == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Purchase_Price_Currency_Code));
            }
            if ((Sales_Price == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(Sales_Price));
            }
            if ((Sales_Price_Currency_Code == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Sales_Price_Currency_Code));
            }
            if ((Location_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Bin_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((long)(Bin_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Inserted_by.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((long)(Inserted_by.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Inserted_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Inserted_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Modified_by.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((long)(Modified_by.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Modified_on.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(Modified_on.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Length == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((byte[])(Length));
            }
            if ((Width == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((byte[])(Width));
            }
            if ((Height == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((byte[])(Height));
            }
            if ((Weight == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((byte[])(Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Item_ID, 
                    global::System.Nullable<long> Item_Type, 
                    string No, 
                    string Description, 
                    string Unit_of_Measure, 
                    global::System.Nullable<long> Manufacturer_ID, 
                    global::System.Nullable<long> Model_ID, 
                    byte[] Purchase_Price, 
                    string Purchase_Price_Currency_Code, 
                    byte[] Sales_Price, 
                    string Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Location_ID, 
                    global::System.Nullable<long> Bin_ID, 
                    global::System.Nullable<long> Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Inserted_on, 
                    global::System.Nullable<long> Modified_by, 
                    global::System.Nullable<global::System.DateTime> Modified_on, 
                    byte[] Length, 
                    byte[] Width, 
                    byte[] Height, 
                    byte[] Weight, 
                    long Original_Item_ID, 
                    global::System.Nullable<long> Original_Item_Type, 
                    string Original_No, 
                    string Original_Description, 
                    string Original_Unit_of_Measure, 
                    global::System.Nullable<long> Original_Manufacturer_ID, 
                    global::System.Nullable<long> Original_Model_ID, 
                    byte[] Original_Purchase_Price, 
                    string Original_Purchase_Price_Currency_Code, 
                    byte[] Original_Sales_Price, 
                    string Original_Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Original_Location_ID, 
                    global::System.Nullable<long> Original_Bin_ID, 
                    global::System.Nullable<long> Original_Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Original_Inserted_on, 
                    global::System.Nullable<long> Original_Modified_by, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_on, 
                    byte[] Original_Length, 
                    byte[] Original_Width, 
                    byte[] Original_Height, 
                    byte[] Original_Weight) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Item_ID));
            if ((Item_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Item_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((No == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(No));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Unit_of_Measure == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Unit_of_Measure));
            }
            if ((Manufacturer_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Manufacturer_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Model_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Model_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Purchase_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(Purchase_Price));
            }
            if ((Purchase_Price_Currency_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Purchase_Price_Currency_Code));
            }
            if ((Sales_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(Sales_Price));
            }
            if ((Sales_Price_Currency_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Sales_Price_Currency_Code));
            }
            if ((Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Bin_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Bin_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Inserted_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Inserted_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Inserted_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Inserted_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Modified_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Modified_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Modified_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Modified_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Length == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte[])(Length));
            }
            if ((Width == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((byte[])(Width));
            }
            if ((Height == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((byte[])(Height));
            }
            if ((Weight == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((byte[])(Weight));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(Original_Item_ID));
            if ((Original_Item_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((long)(Original_Item_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_No == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_No));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Description));
            }
            if ((Original_Unit_of_Measure == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Unit_of_Measure));
            }
            if ((Original_Manufacturer_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((long)(Original_Manufacturer_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Model_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((long)(Original_Model_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Purchase_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((byte[])(Original_Purchase_Price));
            }
            if ((Original_Purchase_Price_Currency_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Purchase_Price_Currency_Code));
            }
            if ((Original_Sales_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((byte[])(Original_Sales_Price));
            }
            if ((Original_Sales_Price_Currency_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Sales_Price_Currency_Code));
            }
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Bin_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((long)(Original_Bin_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((long)(Original_Inserted_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Inserted_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_Inserted_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((long)(Original_Modified_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_on.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_Modified_on.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Length == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((byte[])(Original_Length));
            }
            if ((Original_Width == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((byte[])(Original_Width));
            }
            if ((Original_Height == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((byte[])(Original_Height));
            }
            if ((Original_Weight == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((byte[])(Original_Weight));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Item_Type, 
                    string No, 
                    string Description, 
                    string Unit_of_Measure, 
                    global::System.Nullable<long> Manufacturer_ID, 
                    global::System.Nullable<long> Model_ID, 
                    byte[] Purchase_Price, 
                    string Purchase_Price_Currency_Code, 
                    byte[] Sales_Price, 
                    string Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Location_ID, 
                    global::System.Nullable<long> Bin_ID, 
                    global::System.Nullable<long> Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Inserted_on, 
                    global::System.Nullable<long> Modified_by, 
                    global::System.Nullable<global::System.DateTime> Modified_on, 
                    byte[] Length, 
                    byte[] Width, 
                    byte[] Height, 
                    byte[] Weight, 
                    long Original_Item_ID, 
                    global::System.Nullable<long> Original_Item_Type, 
                    string Original_No, 
                    string Original_Description, 
                    string Original_Unit_of_Measure, 
                    global::System.Nullable<long> Original_Manufacturer_ID, 
                    global::System.Nullable<long> Original_Model_ID, 
                    byte[] Original_Purchase_Price, 
                    string Original_Purchase_Price_Currency_Code, 
                    byte[] Original_Sales_Price, 
                    string Original_Sales_Price_Currency_Code, 
                    global::System.Nullable<long> Original_Location_ID, 
                    global::System.Nullable<long> Original_Bin_ID, 
                    global::System.Nullable<long> Original_Inserted_by, 
                    global::System.Nullable<global::System.DateTime> Original_Inserted_on, 
                    global::System.Nullable<long> Original_Modified_by, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_on, 
                    byte[] Original_Length, 
                    byte[] Original_Width, 
                    byte[] Original_Height, 
                    byte[] Original_Weight) {
            return this.Update(Original_Item_ID, Item_Type, No, Description, Unit_of_Measure, Manufacturer_ID, Model_ID, Purchase_Price, Purchase_Price_Currency_Code, Sales_Price, Sales_Price_Currency_Code, Location_ID, Bin_ID, Inserted_by, Inserted_on, Modified_by, Modified_on, Length, Width, Height, Weight, Original_Item_ID, Original_Item_Type, Original_No, Original_Description, Original_Unit_of_Measure, Original_Manufacturer_ID, Original_Model_ID, Original_Purchase_Price, Original_Purchase_Price_Currency_Code, Original_Sales_Price, Original_Sales_Price_Currency_Code, Original_Location_ID, Original_Bin_ID, Original_Inserted_by, Original_Inserted_on, Original_Modified_by, Original_Modified_on, Original_Length, Original_Width, Original_Height, Original_Weight);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class item_entryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public item_entryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "item_entry";
            tableMapping.ColumnMappings.Add("Item_Entry_ID", "Item_Entry_ID");
            tableMapping.ColumnMappings.Add("Item_Entry_Type_ID", "Item_Entry_Type_ID");
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID");
            tableMapping.ColumnMappings.Add("Location_ID", "Location_ID");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Bin_ID", "Bin_ID");
            tableMapping.ColumnMappings.Add("Unit_of_Measure", "Unit_of_Measure");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("Document_No", "Document_No");
            tableMapping.ColumnMappings.Add("Entry_Date", "Entry_Date");
            tableMapping.ColumnMappings.Add("User_ID", "User_ID");
            tableMapping.ColumnMappings.Add("Partner_ID", "Partner_ID");
            tableMapping.ColumnMappings.Add("Partner_Type", "Partner_Type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM beroebo_wms`.item_entry` WHERE ((Item_Entry_ID` = :Original_Item_Entry_ID) AND ((:IsNull_Item_Entry_Type_ID = 1 AND Item_Entry_Type_ID` IS NULL) OR (Item_Entry_Type_ID` = :Original_Item_Entry_Type_ID)) AND ((:IsNull_Item_ID = 1 AND Item_ID` IS NULL) OR (Item_ID` = :Original_Item_ID)) AND ((:IsNull_Location_ID = 1 AND Location_ID` IS NULL) OR (Location_ID` = :Original_Location_ID)) AND ((:IsNull_Quantity = 1 AND Quantity` IS NULL) OR (Quantity` = :Original_Quantity)) AND ((:IsNull_Bin_ID = 1 AND Bin_ID` IS NULL) OR (Bin_ID` = :Original_Bin_ID)) AND ((:IsNull_Unit_of_Measure = 1 AND Unit_of_Measure` IS NULL) OR (Unit_of_Measure` = :Original_Unit_of_Measure)) AND ((:IsNull_Price = 1 AND Price` IS NULL) OR (Price` = :Original_Price)) AND ((:IsNull_Amount = 1 AND Amount` IS NULL) OR (Amount` = :Original_Amount)) AND ((:IsNull_Document_No = 1 AND Document_No` IS NULL) OR (Document_No` = :Original_Document_No)) AND ((:IsNull_Entry_Date = 1 AND Entry_Date` IS NULL) OR (Entry_Date` = :Original_Entry_Date)) AND ((:IsNull_User_ID = 1 AND User_ID` IS NULL) OR (User_ID` = :Original_User_ID)) AND ((:IsNull_Partner_ID = 1 AND Partner_ID` IS NULL) OR (Partner_ID` = :Original_Partner_ID)) AND ((:IsNull_Partner_Type = 1 AND Partner_Type` IS NULL) OR (Partner_Type` = :Original_Partner_Type)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Entry_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_Entry_Type_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_Type_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Quantity";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Quantity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Quantity";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Quantity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Bin_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Unit_of_Measure";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Amount";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Document_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Document_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Document_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Document_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Entry_Date";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Entry_Date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Entry_Date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Entry_Date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_User_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Partner_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Partner_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Partner_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Partner_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Partner_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Partner_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO beroebo_wms`.item_entry` (Item_Entry_ID`, Item_Entry_Type_ID`, Item_ID`, Location_ID`, Quantity`, Bin_ID`, Unit_of_Measure`, Price`, Amount`, Document_No`, Entry_Date`, User_ID`, Partner_ID`, Partner_Type`) VALUES (:Item_Entry_ID, :Item_Entry_Type_ID, :Item_ID, :Location_ID, :Quantity, :Bin_ID, :Unit_of_Measure, :Price, :Amount, :Document_No, :Entry_Date, :User_ID, :Partner_ID, :Partner_Type)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Entry_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_Type_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Quantity";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Quantity";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Price";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Amount";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Document_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Document_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Entry_Date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Entry_Date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Partner_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Partner_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_Type";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE beroebo_wms`.item_entry` SET Item_Entry_ID` = :Item_Entry_ID, Item_Entry_T" +
                "ype_ID` = :Item_Entry_Type_ID, Item_ID` = :Item_ID, Location_ID` = :Location_ID," +
                " Quantity` = :Quantity, Bin_ID` = :Bin_ID, Unit_of_Measure` = :Unit_of_Measure, " +
                "Price` = :Price, Amount` = :Amount, Document_No` = :Document_No, Entry_Date` = :" +
                "Entry_Date, User_ID` = :User_ID, Partner_ID` = :Partner_ID, Partner_Type` = :Par" +
                "tner_Type WHERE ((Item_Entry_ID` = :Original_Item_Entry_ID) AND ((:IsNull_Item_E" +
                "ntry_Type_ID = 1 AND Item_Entry_Type_ID` IS NULL) OR (Item_Entry_Type_ID` = :Ori" +
                "ginal_Item_Entry_Type_ID)) AND ((:IsNull_Item_ID = 1 AND Item_ID` IS NULL) OR (I" +
                "tem_ID` = :Original_Item_ID)) AND ((:IsNull_Location_ID = 1 AND Location_ID` IS " +
                "NULL) OR (Location_ID` = :Original_Location_ID)) AND ((:IsNull_Quantity = 1 AND " +
                "Quantity` IS NULL) OR (Quantity` = :Original_Quantity)) AND ((:IsNull_Bin_ID = 1" +
                " AND Bin_ID` IS NULL) OR (Bin_ID` = :Original_Bin_ID)) AND ((:IsNull_Unit_of_Mea" +
                "sure = 1 AND Unit_of_Measure` IS NULL) OR (Unit_of_Measure` = :Original_Unit_of_" +
                "Measure)) AND ((:IsNull_Price = 1 AND Price` IS NULL) OR (Price` = :Original_Pri" +
                "ce)) AND ((:IsNull_Amount = 1 AND Amount` IS NULL) OR (Amount` = :Original_Amoun" +
                "t)) AND ((:IsNull_Document_No = 1 AND Document_No` IS NULL) OR (Document_No` = :" +
                "Original_Document_No)) AND ((:IsNull_Entry_Date = 1 AND Entry_Date` IS NULL) OR " +
                "(Entry_Date` = :Original_Entry_Date)) AND ((:IsNull_User_ID = 1 AND User_ID` IS " +
                "NULL) OR (User_ID` = :Original_User_ID)) AND ((:IsNull_Partner_ID = 1 AND Partne" +
                "r_ID` IS NULL) OR (Partner_ID` = :Original_Partner_ID)) AND ((:IsNull_Partner_Ty" +
                "pe = 1 AND Partner_Type` IS NULL) OR (Partner_Type` = :Original_Partner_Type)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Entry_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_Type_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Quantity";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Quantity";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Price";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Amount";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Document_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Document_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Entry_Date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Entry_Date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Partner_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Partner_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_Type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Entry_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_Entry_Type_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_Entry_Type_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_Entry_Type_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Item_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Item_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Item_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Location_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Location_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Location_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Quantity";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Quantity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Quantity";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Quantity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Bin_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Bin_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Bin_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Unit_of_Measure";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Unit_of_Measure";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Unit_of_Measure";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Price";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Price";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Amount";
            param.DbType = global::System.Data.DbType.Binary;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Single;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Document_No";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Document_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Document_No";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Document_No";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Entry_Date";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Entry_Date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Entry_Date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.DateTime;
            param.SourceColumn = "Entry_Date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_User_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Partner_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Partner_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Partner_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Partner_Type";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Partner_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Partner_Type";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Partner_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        item_entry.*\r\nFROM            item_entry";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.item_entryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.item_entryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.item_entryDataTable dataTable = new DataSet1.item_entryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.item_entryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "item_entry");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Item_Entry_ID, global::System.Nullable<long> Original_Item_Entry_Type_ID, global::System.Nullable<long> Original_Item_ID, global::System.Nullable<long> Original_Location_ID, byte[] Original_Quantity, global::System.Nullable<long> Original_Bin_ID, string Original_Unit_of_Measure, byte[] Original_Price, byte[] Original_Amount, string Original_Document_No, global::System.Nullable<global::System.DateTime> Original_Entry_Date, global::System.Nullable<long> Original_User_ID, global::System.Nullable<long> Original_Partner_ID, global::System.Nullable<long> Original_Partner_Type) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Item_Entry_ID));
            if ((Original_Item_Entry_Type_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Item_Entry_Type_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_Item_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Quantity == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_Quantity));
            }
            if ((Original_Bin_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Bin_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_of_Measure == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Unit_of_Measure));
            }
            if ((Original_Price == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((byte[])(Original_Price));
            }
            if ((Original_Amount == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((byte[])(Original_Amount));
            }
            if ((Original_Document_No == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Document_No));
            }
            if ((Original_Entry_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_Entry_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_User_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((long)(Original_User_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Partner_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((long)(Original_Partner_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Partner_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((long)(Original_Partner_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Item_Entry_ID, global::System.Nullable<long> Item_Entry_Type_ID, global::System.Nullable<long> Item_ID, global::System.Nullable<long> Location_ID, byte[] Quantity, global::System.Nullable<long> Bin_ID, string Unit_of_Measure, byte[] Price, byte[] Amount, string Document_No, global::System.Nullable<global::System.DateTime> Entry_Date, global::System.Nullable<long> User_ID, global::System.Nullable<long> Partner_ID, global::System.Nullable<long> Partner_Type) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Item_Entry_ID));
            if ((Item_Entry_Type_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Item_Entry_Type_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Location_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quantity == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(Quantity));
            }
            if ((Bin_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Bin_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Unit_of_Measure == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Unit_of_Measure));
            }
            if ((Price == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(Price));
            }
            if ((Amount == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(Amount));
            }
            if ((Document_No == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Document_No));
            }
            if ((Entry_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Entry_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((User_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(User_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Partner_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((long)(Partner_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Partner_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((long)(Partner_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Item_Entry_ID, 
                    global::System.Nullable<long> Item_Entry_Type_ID, 
                    global::System.Nullable<long> Item_ID, 
                    global::System.Nullable<long> Location_ID, 
                    byte[] Quantity, 
                    global::System.Nullable<long> Bin_ID, 
                    string Unit_of_Measure, 
                    byte[] Price, 
                    byte[] Amount, 
                    string Document_No, 
                    global::System.Nullable<global::System.DateTime> Entry_Date, 
                    global::System.Nullable<long> User_ID, 
                    global::System.Nullable<long> Partner_ID, 
                    global::System.Nullable<long> Partner_Type, 
                    long Original_Item_Entry_ID, 
                    global::System.Nullable<long> Original_Item_Entry_Type_ID, 
                    global::System.Nullable<long> Original_Item_ID, 
                    global::System.Nullable<long> Original_Location_ID, 
                    byte[] Original_Quantity, 
                    global::System.Nullable<long> Original_Bin_ID, 
                    string Original_Unit_of_Measure, 
                    byte[] Original_Price, 
                    byte[] Original_Amount, 
                    string Original_Document_No, 
                    global::System.Nullable<global::System.DateTime> Original_Entry_Date, 
                    global::System.Nullable<long> Original_User_ID, 
                    global::System.Nullable<long> Original_Partner_ID, 
                    global::System.Nullable<long> Original_Partner_Type) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Item_Entry_ID));
            if ((Item_Entry_Type_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Item_Entry_Type_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quantity == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(Quantity));
            }
            if ((Bin_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Bin_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Unit_of_Measure == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Unit_of_Measure));
            }
            if ((Price == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(Price));
            }
            if ((Amount == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(Amount));
            }
            if ((Document_No == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Document_No));
            }
            if ((Entry_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Entry_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((User_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(User_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Partner_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Partner_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Partner_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Partner_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_Item_Entry_ID));
            if ((Original_Item_Entry_Type_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(Original_Item_Entry_Type_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Location_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_Location_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Quantity == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((byte[])(Original_Quantity));
            }
            if ((Original_Bin_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_Bin_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_of_Measure == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Unit_of_Measure));
            }
            if ((Original_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte[])(Original_Price));
            }
            if ((Original_Amount == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte[])(Original_Amount));
            }
            if ((Original_Document_No == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Document_No));
            }
            if ((Original_Entry_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_Entry_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_User_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((long)(Original_User_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Partner_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((long)(Original_Partner_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Partner_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((long)(Original_Partner_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Item_Entry_Type_ID, 
                    global::System.Nullable<long> Item_ID, 
                    global::System.Nullable<long> Location_ID, 
                    byte[] Quantity, 
                    global::System.Nullable<long> Bin_ID, 
                    string Unit_of_Measure, 
                    byte[] Price, 
                    byte[] Amount, 
                    string Document_No, 
                    global::System.Nullable<global::System.DateTime> Entry_Date, 
                    global::System.Nullable<long> User_ID, 
                    global::System.Nullable<long> Partner_ID, 
                    global::System.Nullable<long> Partner_Type, 
                    long Original_Item_Entry_ID, 
                    global::System.Nullable<long> Original_Item_Entry_Type_ID, 
                    global::System.Nullable<long> Original_Item_ID, 
                    global::System.Nullable<long> Original_Location_ID, 
                    byte[] Original_Quantity, 
                    global::System.Nullable<long> Original_Bin_ID, 
                    string Original_Unit_of_Measure, 
                    byte[] Original_Price, 
                    byte[] Original_Amount, 
                    string Original_Document_No, 
                    global::System.Nullable<global::System.DateTime> Original_Entry_Date, 
                    global::System.Nullable<long> Original_User_ID, 
                    global::System.Nullable<long> Original_Partner_ID, 
                    global::System.Nullable<long> Original_Partner_Type) {
            return this.Update(Original_Item_Entry_ID, Item_Entry_Type_ID, Item_ID, Location_ID, Quantity, Bin_ID, Unit_of_Measure, Price, Amount, Document_No, Entry_Date, User_ID, Partner_ID, Partner_Type, Original_Item_Entry_ID, Original_Item_Entry_Type_ID, Original_Item_ID, Original_Location_ID, Original_Quantity, Original_Bin_ID, Original_Unit_of_Measure, Original_Price, Original_Amount, Original_Document_No, Original_Entry_Date, Original_User_ID, Original_Partner_ID, Original_Partner_Type);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class manufacturerTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public manufacturerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "manufacturer";
            tableMapping.ColumnMappings.Add("Manufacturer_ID", "Manufacturer_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code");
            tableMapping.ColumnMappings.Add("Website", "Website");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM beroebo_wms`.manufacturer` WHERE ((Manufacturer_ID` = :Original_Manufacturer_ID) AND ((:IsNull_Name = 1 AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:IsNull_Country_Code = 1 AND Country_Code` IS NULL) OR (Country_Code` = :Original_Country_Code)) AND ((:IsNull_Website = 1 AND Website` IS NULL) OR (Website` = :Original_Website)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Country_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Website";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Website";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Website";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Website";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO beroebo_wms`.manufacturer` (Manufacturer_ID`, Name`, Country_Code`, W" +
                "ebsite`) VALUES (:Manufacturer_ID, :Name, :Country_Code, :Website)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Website";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Website";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE beroebo_wms`.manufacturer` SET Manufacturer_ID` = :Manufacturer_ID, Name` = :Name, Country_Code` = :Country_Code, Website` = :Website WHERE ((Manufacturer_ID` = :Original_Manufacturer_ID) AND ((:IsNull_Name = 1 AND Name` IS NULL) OR (Name` = :Original_Name)) AND ((:IsNull_Country_Code = 1 AND Country_Code` IS NULL) OR (Country_Code` = :Original_Country_Code)) AND ((:IsNull_Website = 1 AND Website` IS NULL) OR (Website` = :Original_Website)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Website";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Website";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Manufacturer_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "Manufacturer_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Country_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Country_Code";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Country_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Website";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Website";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Website";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Website";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        manufacturer.*\r\nFROM            manufacturer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.manufacturerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.manufacturerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.manufacturerDataTable dataTable = new DataSet1.manufacturerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.manufacturerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "manufacturer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Manufacturer_ID, string Original_Name, string Original_Country_Code, string Original_Website) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Manufacturer_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Country_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Country_Code));
            }
            if ((Original_Website == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Website));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Manufacturer_ID, string Name, string Country_Code, string Website) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Manufacturer_ID));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Country_Code == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Country_Code));
            }
            if ((Website == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Website));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long Manufacturer_ID, string Name, string Country_Code, string Website, long Original_Manufacturer_ID, string Original_Name, string Original_Country_Code, string Original_Website) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Manufacturer_ID));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Country_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Country_Code));
            }
            if ((Website == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Website));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Original_Manufacturer_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
            }
            if ((Original_Country_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Country_Code));
            }
            if ((Original_Website == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Website));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, string Country_Code, string Website, long Original_Manufacturer_ID, string Original_Name, string Original_Country_Code, string Original_Website) {
            return this.Update(Original_Manufacturer_ID, Name, Country_Code, Website, Original_Manufacturer_ID, Original_Name, Original_Country_Code, Original_Website);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class modelTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public modelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "model";
            tableMapping.ColumnMappings.Add("Model_ID", "Model_ID");
            tableMapping.ColumnMappings.Add("Manufacturer_ID", "Manufacturer_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Production_Date", "Production_Date");
            tableMapping.ColumnMappings.Add("Inserted_by", "Inserted_by");
            tableMapping.ColumnMappings.Add("Inserted_on", "Inserted_on");
            tableMapping.ColumnMappings.Add("Modified_by", "Modified_by");
            tableMapping.ColumnMappings.Add("Modified_on", "Modified_on");
            tableMapping.ColumnMappings.Add("EXPR2", "Manufacturer_Name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        model.Model_ID, model.Manufacturer_ID, model.Name, model.Production_Date, model.Inserted_by, model.Inserted_on, model.Modified_by, model.Modified_on, manufacturer.Name AS EXPR2
FROM            model INNER JOIN
                         manufacturer ON model.Manufacturer_ID = manufacturer.Manufacturer_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.modelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.modelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.modelDataTable dataTable = new DataSet1.modelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class userTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.Universal.UniDataAdapter _adapter;
        
        private global::Devart.Data.Universal.UniConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.Universal.UniCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public userTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.Universal.UniDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.Universal.UniConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.Universal.UniCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.Universal.UniCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.Universal.UniDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "user";
            tableMapping.ColumnMappings.Add("User_ID", "User_ID");
            tableMapping.ColumnMappings.Add("First_Name", "First_Name");
            tableMapping.ColumnMappings.Add("Middle_Name", "Middle_Name");
            tableMapping.ColumnMappings.Add("Family_Name", "Family_Name");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Telephone", "Telephone");
            tableMapping.ColumnMappings.Add("Username", "Username");
            tableMapping.ColumnMappings.Add("Full_Name", "Full_Name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM beroebo_wms`.user` WHERE ((User_ID` = :Original_User_ID) AND ((:IsNull_First_Name = 1 AND First_Name` IS NULL) OR (First_Name` = :Original_First_Name)) AND ((:IsNull_Middle_Name = 1 AND Middle_Name` IS NULL) OR (Middle_Name` = :Original_Middle_Name)) AND ((:IsNull_Family_Name = 1 AND Family_Name` IS NULL) OR (Family_Name` = :Original_Family_Name)) AND ((:IsNull_Password = 1 AND Password` IS NULL) OR (Password` = :Original_Password)) AND ((:IsNull_Email = 1 AND Email` IS NULL) OR (Email` = :Original_Email)) AND ((:IsNull_Telephone = 1 AND Telephone` IS NULL) OR (Telephone` = :Original_Telephone)) AND ((:IsNull_Username = 1 AND Username` IS NULL) OR (Username` = :Original_Username)) AND ((:IsNull_Full_Name = 1 AND Full_Name` IS NULL) OR (Full_Name` = :Original_Full_Name)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.Universal.UniParameter param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_First_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "First_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_First_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "First_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Middle_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Middle_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Middle_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Middle_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Family_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Family_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Family_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Family_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Password";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Password";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Email";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Telephone";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Telephone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Telephone";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Telephone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Username";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Username";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Username";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Username";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Full_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Full_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Full_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Full_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO beroebo_wms`.user` (User_ID`, First_Name`, Middle_Name`, Family_Name`" +
                ", Password`, Email`, Telephone`, Username`, Full_Name`) VALUES (:User_ID, :First" +
                "_Name, :Middle_Name, :Family_Name, :Password, :Email, :Telephone, :Username, :Fu" +
                "ll_Name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "First_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "First_Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Middle_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Middle_Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Family_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Family_Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Password";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Password";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Telephone";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Telephone";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Username";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Username";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Full_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Full_Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.Universal.UniCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE beroebo_wms`.user` SET User_ID` = :User_ID, First_Name` = :First_Name, Middle_Name` = :Middle_Name, Family_Name` = :Family_Name, Password` = :Password, Email` = :Email, Telephone` = :Telephone, Username` = :Username, Full_Name` = :Full_Name WHERE ((User_ID` = :Original_User_ID) AND ((:IsNull_First_Name = 1 AND First_Name` IS NULL) OR (First_Name` = :Original_First_Name)) AND ((:IsNull_Middle_Name = 1 AND Middle_Name` IS NULL) OR (Middle_Name` = :Original_Middle_Name)) AND ((:IsNull_Family_Name = 1 AND Family_Name` IS NULL) OR (Family_Name` = :Original_Family_Name)) AND ((:IsNull_Password = 1 AND Password` IS NULL) OR (Password` = :Original_Password)) AND ((:IsNull_Email = 1 AND Email` IS NULL) OR (Email` = :Original_Email)) AND ((:IsNull_Telephone = 1 AND Telephone` IS NULL) OR (Telephone` = :Original_Telephone)) AND ((:IsNull_Username = 1 AND Username` IS NULL) OR (Username` = :Original_Username)) AND ((:IsNull_Full_Name = 1 AND Full_Name` IS NULL) OR (Full_Name` = :Original_Full_Name)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "First_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "First_Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Middle_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Middle_Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Family_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Family_Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Password";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Telephone";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Telephone";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Username";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Username";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Full_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Full_Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_User_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.BigInt;
            param.SourceColumn = "User_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_First_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "First_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_First_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "First_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Middle_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Middle_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Middle_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Middle_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Family_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Family_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Family_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Family_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Password";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Password";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Email";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Email";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Telephone";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Telephone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Telephone";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Telephone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Username";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Username";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Username";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Username";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "IsNull_Full_Name";
            param.DbType = global::System.Data.DbType.Int32;
            param.UniDbType = global::Devart.Data.Universal.UniDbType.Int;
            param.SourceColumn = "Full_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.Universal.UniParameter();
            param.ParameterName = "Original_Full_Name";
            param.UniDbType = global::Devart.Data.Universal.UniDbType.VarChar;
            param.SourceColumn = "Full_Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.Universal.UniConnection();
            this._connection.ConnectionString = global::WMS.Properties.Settings.Default.beroebo_wmsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.Universal.UniCommand[1];
            this._commandCollection[0] = new global::Devart.Data.Universal.UniCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        `user`.*\r\nFROM            `user`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.userDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.userDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.userDataTable dataTable = new DataSet1.userDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.userDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "user");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_User_ID, string Original_First_Name, string Original_Middle_Name, string Original_Family_Name, string Original_Password, string Original_Email, string Original_Telephone, string Original_Username, string Original_Full_Name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_User_ID));
            if ((Original_First_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_First_Name));
            }
            if ((Original_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Middle_Name));
            }
            if ((Original_Family_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Family_Name));
            }
            if ((Original_Password == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Password));
            }
            if ((Original_Email == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Email));
            }
            if ((Original_Telephone == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Telephone));
            }
            if ((Original_Username == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Username));
            }
            if ((Original_Full_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Full_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long User_ID, string First_Name, string Middle_Name, string Family_Name, string Password, string Email, string Telephone, string Username, string Full_Name) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(User_ID));
            if ((First_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(First_Name));
            }
            if ((Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Middle_Name));
            }
            if ((Family_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Family_Name));
            }
            if ((Password == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Password));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Email));
            }
            if ((Telephone == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Telephone));
            }
            if ((Username == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Username));
            }
            if ((Full_Name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Full_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long User_ID, 
                    string First_Name, 
                    string Middle_Name, 
                    string Family_Name, 
                    string Password, 
                    string Email, 
                    string Telephone, 
                    string Username, 
                    string Full_Name, 
                    long Original_User_ID, 
                    string Original_First_Name, 
                    string Original_Middle_Name, 
                    string Original_Family_Name, 
                    string Original_Password, 
                    string Original_Email, 
                    string Original_Telephone, 
                    string Original_Username, 
                    string Original_Full_Name) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(User_ID));
            if ((First_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(First_Name));
            }
            if ((Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Middle_Name));
            }
            if ((Family_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Family_Name));
            }
            if ((Password == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Password));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Email));
            }
            if ((Telephone == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Telephone));
            }
            if ((Username == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Username));
            }
            if ((Full_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Full_Name));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_User_ID));
            if ((Original_First_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_First_Name));
            }
            if ((Original_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Middle_Name));
            }
            if ((Original_Family_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Family_Name));
            }
            if ((Original_Password == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Password));
            }
            if ((Original_Email == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Email));
            }
            if ((Original_Telephone == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Telephone));
            }
            if ((Original_Username == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Username));
            }
            if ((Original_Full_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Full_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string First_Name, 
                    string Middle_Name, 
                    string Family_Name, 
                    string Password, 
                    string Email, 
                    string Telephone, 
                    string Username, 
                    string Full_Name, 
                    long Original_User_ID, 
                    string Original_First_Name, 
                    string Original_Middle_Name, 
                    string Original_Family_Name, 
                    string Original_Password, 
                    string Original_Email, 
                    string Original_Telephone, 
                    string Original_Username, 
                    string Original_Full_Name) {
            return this.Update(Original_User_ID, First_Name, Middle_Name, Family_Name, Password, Email, Telephone, Username, Full_Name, Original_User_ID, Original_First_Name, Original_Middle_Name, Original_Family_Name, Original_Password, Original_Email, Original_Telephone, Original_Username, Original_Full_Name);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private binTableAdapter _binTableAdapter;
        
        private locationTableAdapter _locationTableAdapter;
        
        private currencyTableAdapter _currencyTableAdapter;
        
        private customerTableAdapter _customerTableAdapter;
        
        private itemTableAdapter _itemTableAdapter;
        
        private item_entryTableAdapter _item_entryTableAdapter;
        
        private manufacturerTableAdapter _manufacturerTableAdapter;
        
        private userTableAdapter _userTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public binTableAdapter binTableAdapter {
            get {
                return this._binTableAdapter;
            }
            set {
                this._binTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public locationTableAdapter locationTableAdapter {
            get {
                return this._locationTableAdapter;
            }
            set {
                this._locationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public currencyTableAdapter currencyTableAdapter {
            get {
                return this._currencyTableAdapter;
            }
            set {
                this._currencyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public customerTableAdapter customerTableAdapter {
            get {
                return this._customerTableAdapter;
            }
            set {
                this._customerTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public itemTableAdapter itemTableAdapter {
            get {
                return this._itemTableAdapter;
            }
            set {
                this._itemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public item_entryTableAdapter item_entryTableAdapter {
            get {
                return this._item_entryTableAdapter;
            }
            set {
                this._item_entryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public manufacturerTableAdapter manufacturerTableAdapter {
            get {
                return this._manufacturerTableAdapter;
            }
            set {
                this._manufacturerTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public userTableAdapter userTableAdapter {
            get {
                return this._userTableAdapter;
            }
            set {
                this._userTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._binTableAdapter != null) 
                            && (this._binTableAdapter.Connection != null))) {
                    return this._binTableAdapter.Connection;
                }
                if (((this._locationTableAdapter != null) 
                            && (this._locationTableAdapter.Connection != null))) {
                    return this._locationTableAdapter.Connection;
                }
                if (((this._currencyTableAdapter != null) 
                            && (this._currencyTableAdapter.Connection != null))) {
                    return this._currencyTableAdapter.Connection;
                }
                if (((this._customerTableAdapter != null) 
                            && (this._customerTableAdapter.Connection != null))) {
                    return this._customerTableAdapter.Connection;
                }
                if (((this._itemTableAdapter != null) 
                            && (this._itemTableAdapter.Connection != null))) {
                    return this._itemTableAdapter.Connection;
                }
                if (((this._item_entryTableAdapter != null) 
                            && (this._item_entryTableAdapter.Connection != null))) {
                    return this._item_entryTableAdapter.Connection;
                }
                if (((this._manufacturerTableAdapter != null) 
                            && (this._manufacturerTableAdapter.Connection != null))) {
                    return this._manufacturerTableAdapter.Connection;
                }
                if (((this._userTableAdapter != null) 
                            && (this._userTableAdapter.Connection != null))) {
                    return this._userTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._binTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._locationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._currencyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._customerTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._itemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._item_entryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._manufacturerTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._userTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._binTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bin.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._binTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._locationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.location.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._locationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._currencyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.currency.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._currencyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._item_entryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.item_entry.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._item_entryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.manufacturer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.user.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._binTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bin.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._binTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._locationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.location.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._locationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._currencyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.currency.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._currencyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._item_entryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.item_entry.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._item_entryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.manufacturer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.user.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.user.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.manufacturer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._item_entryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.item_entry.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._item_entryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._currencyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.currency.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._currencyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._locationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.location.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._locationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._binTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bin.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._binTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._binTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._binTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._locationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._locationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._currencyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._currencyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._customerTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customerTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._itemTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._itemTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._item_entryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._item_entryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._manufacturerTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._manufacturerTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._userTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._userTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._binTableAdapter != null)) {
                    revertConnections.Add(this._binTableAdapter, this._binTableAdapter.Connection);
                    this._binTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._binTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._binTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._binTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._binTableAdapter.Adapter);
                    }
                }
                if ((this._locationTableAdapter != null)) {
                    revertConnections.Add(this._locationTableAdapter, this._locationTableAdapter.Connection);
                    this._locationTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._locationTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._locationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._locationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._locationTableAdapter.Adapter);
                    }
                }
                if ((this._currencyTableAdapter != null)) {
                    revertConnections.Add(this._currencyTableAdapter, this._currencyTableAdapter.Connection);
                    this._currencyTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._currencyTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._currencyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._currencyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._currencyTableAdapter.Adapter);
                    }
                }
                if ((this._customerTableAdapter != null)) {
                    revertConnections.Add(this._customerTableAdapter, this._customerTableAdapter.Connection);
                    this._customerTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._customerTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._customerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customerTableAdapter.Adapter);
                    }
                }
                if ((this._itemTableAdapter != null)) {
                    revertConnections.Add(this._itemTableAdapter, this._itemTableAdapter.Connection);
                    this._itemTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._itemTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._itemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._itemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._itemTableAdapter.Adapter);
                    }
                }
                if ((this._item_entryTableAdapter != null)) {
                    revertConnections.Add(this._item_entryTableAdapter, this._item_entryTableAdapter.Connection);
                    this._item_entryTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._item_entryTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._item_entryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._item_entryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._item_entryTableAdapter.Adapter);
                    }
                }
                if ((this._manufacturerTableAdapter != null)) {
                    revertConnections.Add(this._manufacturerTableAdapter, this._manufacturerTableAdapter.Connection);
                    this._manufacturerTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._manufacturerTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._manufacturerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._manufacturerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._manufacturerTableAdapter.Adapter);
                    }
                }
                if ((this._userTableAdapter != null)) {
                    revertConnections.Add(this._userTableAdapter, this._userTableAdapter.Connection);
                    this._userTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(workConnection));
                    this._userTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._userTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._userTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._userTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._binTableAdapter != null)) {
                    this._binTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._binTableAdapter]));
                    this._binTableAdapter.Transaction = null;
                }
                if ((this._locationTableAdapter != null)) {
                    this._locationTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._locationTableAdapter]));
                    this._locationTableAdapter.Transaction = null;
                }
                if ((this._currencyTableAdapter != null)) {
                    this._currencyTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._currencyTableAdapter]));
                    this._currencyTableAdapter.Transaction = null;
                }
                if ((this._customerTableAdapter != null)) {
                    this._customerTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._customerTableAdapter]));
                    this._customerTableAdapter.Transaction = null;
                }
                if ((this._itemTableAdapter != null)) {
                    this._itemTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._itemTableAdapter]));
                    this._itemTableAdapter.Transaction = null;
                }
                if ((this._item_entryTableAdapter != null)) {
                    this._item_entryTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._item_entryTableAdapter]));
                    this._item_entryTableAdapter.Transaction = null;
                }
                if ((this._manufacturerTableAdapter != null)) {
                    this._manufacturerTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._manufacturerTableAdapter]));
                    this._manufacturerTableAdapter.Transaction = null;
                }
                if ((this._userTableAdapter != null)) {
                    this._userTableAdapter.Connection = ((global::Devart.Data.Universal.UniConnection)(revertConnections[this._userTableAdapter]));
                    this._userTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591